[
  {
    "id": "ace-compute-001",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your company needs to deploy a web application that processes batch jobs. The workload can tolerate interruptions and needs to minimize costs.",
    "question": "What should you do to minimize costs while maintaining the ability to process the workload?",
    "options": [
      {
        "id": "A",
        "text": "Use Compute Engine instances with sustained use discounts"
      },
      {
        "id": "B",
        "text": "Deploy to App Engine with automatic scaling enabled"
      },
      {
        "id": "C",
        "text": "Use preemptible VMs with a managed instance group"
      },
      {
        "id": "D",
        "text": "Deploy to Google Kubernetes Engine with node autoscaling"
      }
    ],
    "correctAnswer": ["C"],
    "explanation": {
      "correct": "Preemptible VMs cost up to 80% less than regular instances and are ideal for batch processing and fault-tolerant workloads that can handle interruptions. Using a managed instance group provides automatic recovery if instances are preempted.",
      "incorrect": {
        "A": "While sustained use discounts reduce costs, they don't provide the 80% savings that preemptible VMs offer for fault-tolerant workloads.",
        "B": "App Engine is more expensive for compute-intensive batch jobs and doesn't provide the same cost optimization as preemptible VMs.",
        "D": "GKE adds orchestration overhead and complexity. For simple batch processing, managed instance groups with preemptible VMs are more cost-effective."
      }
    },
    "keyConceptName": "Cost Optimization - Preemptible VMs",
    "keyConcept": "Preemptible VMs are Google-recommended for fault-tolerant, batch processing workloads that can handle interruptions. They provide up to 80% cost savings compared to regular instances.",
    "tags": [
      "preemptible-vms",
      "cost-optimization",
      "batch-processing",
      "managed-instance-groups"
    ],
    "examPatternKeywords": ["minimize cost", "fault-tolerant", "interruptions"],
    "relatedQuestionIds": ["ace-compute-015", "ace-compute-032"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/preemptible"
  },
  {
    "id": "ace-compute-002",
    "domain": "compute-engine",
    "difficulty": "hard",
    "type": "multiple-select",
    "scenario": "You are setting up a highly available web application that needs to handle variable traffic and automatically recover from failures.",
    "question": "Which components should you use to achieve high availability and automatic recovery? (Select 3)",
    "options": [
      {
        "id": "A",
        "text": "Instance templates to define VM configuration"
      },
      {
        "id": "B",
        "text": "Regional managed instance groups for distribution"
      },
      {
        "id": "C",
        "text": "Single-zone persistent disks for data storage"
      },
      {
        "id": "D",
        "text": "Health checks with autohealing enabled"
      },
      {
        "id": "E",
        "text": "Manual scaling to control costs"
      }
    ],
    "correctAnswer": ["A", "B", "D"],
    "explanation": {
      "correct": "Instance templates define consistent VM configurations, regional managed instance groups distribute instances across multiple zones for high availability, and health checks with autohealing automatically replace failed instances.",
      "incorrect": {
        "C": "Single-zone persistent disks create a single point of failure. For high availability, use regional persistent disks or replicate data across zones.",
        "E": "Manual scaling doesn't provide automatic recovery or handle variable traffic automatically. Autoscaling is needed for high availability."
      }
    },
    "keyConceptName": "High Availability Architecture",
    "keyConcept": "High availability requires: (1) Instance templates for consistency, (2) Regional managed instance groups for multi-zone distribution, (3) Health checks with autohealing for automatic recovery, and (4) Autoscaling for variable traffic.",
    "tags": [
      "high-availability",
      "managed-instance-groups",
      "autohealing",
      "instance-templates"
    ],
    "examPatternKeywords": [
      "high availability",
      "automatic recovery",
      "google-recommended"
    ],
    "relatedQuestionIds": ["ace-compute-005", "ace-compute-018"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-groups"
  },
  {
    "id": "ace-compute-003",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You have a Managed Instance Group (MIG) running web servers. During deployment of a new instance template, you want to ensure zero downtime and that capacity never drops below current levels.",
    "question": "Which rolling update configuration should you use?",
    "options": [
      {
        "id": "A",
        "text": "Set maxSurge to 0 and maxUnavailable to 1"
      },
      {
        "id": "B",
        "text": "Set maxSurge to 1 and maxUnavailable to 0"
      },
      {
        "id": "C",
        "text": "Set maxSurge to 1 and maxUnavailable to 1"
      },
      {
        "id": "D",
        "text": "Set maxSurge to 0 and maxUnavailable to 0"
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "maxSurge=1 allows creating additional instances before removing old ones, and maxUnavailable=0 ensures no instances are taken down during the update. This maintains or increases capacity throughout the deployment, ensuring zero downtime.",
      "incorrect": {
        "A": "maxUnavailable=1 means instances will be terminated before new ones are ready, temporarily reducing capacity and potentially causing downtime.",
        "C": "While this works, allowing maxUnavailable=1 can temporarily reduce capacity, which violates the requirement to never drop below current levels.",
        "D": "Both set to 0 would prevent any updates from occurring, as no instances can be created or removed."
      }
    },
    "keyConceptName": "Managed Instance Group Rolling Updates",
    "keyConcept": "MIG rolling updates use maxSurge (extra instances during update) and maxUnavailable (instances that can be down) to control update behavior. For zero downtime and maintained capacity, use maxSurge > 0 and maxUnavailable = 0.",
    "tags": [
      "compute-engine",
      "managed-instance-group",
      "rolling-updates",
      "zero-downtime"
    ],
    "examPatternKeywords": [
      "zero downtime",
      "capacity never drops",
      "deployment"
    ],
    "relatedQuestionIds": ["ace-compute-004", "ace-compute-007"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-groups/rolling-out-updates-to-managed-instance-groups"
  },
  {
    "id": "ace-compute-004",
    "domain": "compute-engine",
    "difficulty": "hard",
    "type": "multiple-select",
    "scenario": "Your application runs on a Managed Instance Group with autoscaling enabled. Instances take 3 minutes to fully initialize and start serving traffic. You're seeing instances being added and removed too frequently. What should you configure? (Select 3)",
    "question": "Which configurations will stabilize the autoscaling behavior?",
    "options": [
      {
        "id": "A",
        "text": "Increase the health check initial delay to 200 seconds"
      },
      {
        "id": "B",
        "text": "Configure cooldown period to allow stabilization after scaling"
      },
      {
        "id": "C",
        "text": "Set a higher CPU utilization target (e.g., 80% instead of 60%)"
      },
      {
        "id": "D",
        "text": "Enable predictive autoscaling for better forecasting"
      },
      {
        "id": "E",
        "text": "Decrease the health check interval to 5 seconds"
      }
    ],
    "correctAnswer": ["A", "B", "D"],
    "explanation": {
      "correct": "Increasing initial delay (A) prevents premature health check failures during initialization, cooldown periods (B) prevent thrashing by waiting after scale events, and predictive autoscaling (D) anticipates demand to scale proactively and smoothly.",
      "incorrect": {
        "C": "Increasing CPU target may reduce scaling frequency but could impact performance. It doesn't address the root causes of instability.",
        "E": "Decreasing health check interval makes the system more reactive and could increase instability, especially during the 3-minute initialization period."
      }
    },
    "keyConceptName": "Autoscaling Stability Configuration",
    "keyConcept": "Stable autoscaling requires proper health check timing (initial delay matching startup time), cooldown periods between scaling events, and optionally predictive autoscaling. These prevent oscillation and premature scaling decisions.",
    "tags": ["compute-engine", "autoscaling", "health-checks", "stability"],
    "examPatternKeywords": [
      "too frequently",
      "stabilize",
      "initialization time"
    ],
    "relatedQuestionIds": ["ace-compute-003", "ace-compute-011"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/autoscaler"
  },
  {
    "id": "ace-compute-005",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You need to run a batch processing job that takes 8 hours to complete. The job can tolerate interruptions and can restart from checkpoints. You want to minimize costs.",
    "question": "Which instance type should you use?",
    "options": [
      {
        "id": "A",
        "text": "Standard instances with committed use discounts"
      },
      {
        "id": "B",
        "text": "Preemptible VM instances"
      },
      {
        "id": "C",
        "text": "Spot VM instances"
      },
      {
        "id": "D",
        "text": "Standard instances in a Managed Instance Group"
      }
    ],
    "correctAnswer": ["C"],
    "explanation": {
      "correct": "Spot VMs are the evolution of Preemptible VMs with better pricing and no maximum runtime. Since the job is fault-tolerant with checkpointing, Spot VMs offer the lowest cost (up to 91% discount) and can run for longer than 24 hours if capacity is available.",
      "incorrect": {
        "A": "Committed use discounts save money but still cost significantly more than Spot VMs. For fault-tolerant workloads, Spot VMs are more cost-effective.",
        "B": "Preemptible VMs have a maximum runtime of 24 hours and will always be terminated after 24 hours. Spot VMs are the newer, better option.",
        "D": "Standard instances in a MIG provide high availability but don't offer the cost savings needed for batch processing workloads."
      }
    },
    "keyConceptName": "Spot VMs for Batch Processing",
    "keyConcept": "Spot VMs (successor to Preemptible VMs) offer up to 91% cost savings for fault-tolerant workloads. They have no maximum runtime and are ideal for batch jobs, data processing, and any interruptible workload with checkpointing.",
    "tags": [
      "compute-engine",
      "spot-vms",
      "cost-optimization",
      "batch-processing"
    ],
    "examPatternKeywords": [
      "minimize costs",
      "tolerates interruptions",
      "batch processing"
    ],
    "relatedQuestionIds": ["ace-compute-006", "ace-compute-012"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/spot"
  },
  {
    "id": "ace-compute-006",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You have a VM instance that requires 4 vCPUs and 32 GB of memory for your application. No predefined machine type matches these requirements exactly.",
    "question": "What should you do?",
    "options": [
      {
        "id": "A",
        "text": "Use the n1-standard-4 machine type which has 4 vCPUs but only 15 GB memory"
      },
      {
        "id": "B",
        "text": "Create a custom machine type with 4 vCPUs and 32 GB memory"
      },
      {
        "id": "C",
        "text": "Use the n1-highmem-4 machine type which has 4 vCPUs and 26 GB memory"
      },
      {
        "id": "D",
        "text": "Use the n1-standard-8 machine type and pay for unused vCPUs"
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Custom machine types allow you to specify exact vCPU and memory requirements. This is the most cost-effective option when predefined types don't match your needs, as you only pay for what you use.",
      "incorrect": {
        "A": "15 GB is insufficient for the application's 32 GB memory requirement. The application would likely fail or perform poorly.",
        "C": "26 GB is less than the required 32 GB. While closer, it still doesn't meet the application's memory requirements.",
        "D": "Using a larger machine type wastes resources and money. Custom machine types provide better cost optimization."
      }
    },
    "keyConceptName": "Custom Machine Types",
    "keyConcept": "Custom machine types let you create VMs with specific vCPU and memory configurations when predefined types don't match your needs. This optimizes costs by paying only for required resources, with vCPU-to-memory ratios from 0.9 GB to 6.5 GB per vCPU.",
    "tags": [
      "compute-engine",
      "custom-machine-types",
      "cost-optimization",
      "sizing"
    ],
    "examPatternKeywords": [
      "exact requirements",
      "no predefined",
      "specific configuration"
    ],
    "relatedQuestionIds": ["ace-compute-013", "ace-compute-014"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type"
  },
  {
    "id": "ace-compute-007",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your Managed Instance Group needs to maintain at least 5 instances running at all times for high availability, even during maintenance events. You want instances to automatically restart if they crash.",
    "question": "What should you configure in the instance template?",
    "options": [
      {
        "id": "A",
        "text": "Set automatic restart to ON and on-host maintenance to TERMINATE"
      },
      {
        "id": "B",
        "text": "Set automatic restart to ON and on-host maintenance to MIGRATE"
      },
      {
        "id": "C",
        "text": "Set automatic restart to OFF and on-host maintenance to MIGRATE"
      },
      {
        "id": "D",
        "text": "Configure autohealing with health checks"
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Automatic restart ON ensures instances restart after crashes. On-host maintenance MIGRATE ensures instances are live-migrated during GCP maintenance, maintaining availability without downtime. This combination provides maximum uptime.",
      "incorrect": {
        "A": "TERMINATE during maintenance means instances are stopped and restarted on new hosts, causing temporary unavailability during GCP maintenance events.",
        "C": "Automatic restart OFF means instances won't restart after crashes, violating the availability requirement.",
        "D": "While autohealing is good practice, it doesn't specifically address automatic restart on crashes or behavior during host maintenance events."
      }
    },
    "keyConceptName": "Instance Availability Configuration",
    "keyConcept": "Configure automatic restart (ON) for crash recovery and on-host maintenance (MIGRATE) for live migration during GCP maintenance. This combination maximizes uptime. Use with MIGs and health checks for comprehensive high availability.",
    "tags": [
      "compute-engine",
      "high-availability",
      "instance-template",
      "maintenance"
    ],
    "examPatternKeywords": [
      "at all times",
      "high availability",
      "automatically restart"
    ],
    "relatedQuestionIds": ["ace-compute-003", "ace-compute-011"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/setting-instance-scheduling-options"
  },
  {
    "id": "ace-compute-008",
    "domain": "compute-engine",
    "difficulty": "hard",
    "type": "multiple-choice",
    "scenario": "Your application needs GPU acceleration for machine learning workloads. The workloads run for 6-12 hours and can checkpoint progress. You need to minimize costs while using GPUs.",
    "question": "What instance configuration should you use?",
    "options": [
      {
        "id": "A",
        "text": "Standard instances with attached GPUs and committed use discounts"
      },
      {
        "id": "B",
        "text": "Preemptible instances with attached GPUs"
      },
      {
        "id": "C",
        "text": "Spot instances with attached GPUs"
      },
      {
        "id": "D",
        "text": "Standard instances with attached GPUs in a Managed Instance Group"
      }
    ],
    "correctAnswer": ["C"],
    "explanation": {
      "correct": "Spot instances with GPUs offer the lowest cost (up to 91% discount). Since workloads can checkpoint and recovery from interruption, and Spot VMs don't have the 24-hour maximum runtime limit of Preemptible VMs, they're ideal for 6-12 hour ML workloads.",
      "incorrect": {
        "A": "Committed use discounts help but don't provide the dramatic savings of Spot VMs for interruptible workloads.",
        "B": "Preemptible VMs have a 24-hour maximum runtime, which is fine for this workload, but Spot VMs are the newer, recommended option with better pricing.",
        "D": "MIGs with standard instances provide high availability but at significantly higher cost. For batch ML workloads with checkpointing, this is unnecessary."
      }
    },
    "keyConceptName": "GPU Cost Optimization",
    "keyConcept": "Combine GPUs with Spot VMs for significant cost savings on fault-tolerant ML workloads. GPUs are available on Spot instances, offering the same 91% discount as CPU-only Spot VMs. Implement checkpointing to handle interruptions.",
    "tags": [
      "compute-engine",
      "gpu",
      "spot-vms",
      "machine-learning",
      "cost-optimization"
    ],
    "examPatternKeywords": ["GPU", "minimize costs", "checkpoint"],
    "relatedQuestionIds": ["ace-compute-005", "ace-gke-009"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/gpus"
  },
  {
    "id": "ace-compute-009",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You need to grant a Compute Engine instance access to read objects from a Cloud Storage bucket. You want to follow Google-recommended security practices without using service account keys.",
    "question": "What should you do?",
    "options": [
      {
        "id": "A",
        "text": "Download a service account key and store it on the instance"
      },
      {
        "id": "B",
        "text": "Create a custom service account with Storage Object Viewer role and attach it to the instance"
      },
      {
        "id": "C",
        "text": "Use the default Compute Engine service account with Editor role"
      },
      {
        "id": "D",
        "text": "Configure access scopes to allow Cloud Storage read access"
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Create a custom service account with minimal permissions (Storage Object Viewer) and attach it to the instance. This follows least privilege and uses workload identity, avoiding keys entirely. The instance automatically authenticates using the attached service account.",
      "incorrect": {
        "A": "Service account keys should be avoided whenever possible. They present security risks if compromised. Attached service accounts eliminate the need for keys.",
        "C": "The default service account with Editor role violates the principle of least privilege. Always create custom service accounts with minimal required permissions.",
        "D": "Access scopes are a legacy mechanism and less flexible than IAM roles. Modern best practice is to use IAM roles on custom service accounts."
      }
    },
    "keyConceptName": "Compute Engine Service Account Best Practices",
    "keyConcept": "Attach custom service accounts with minimal IAM permissions to instances. Never use service account keys when workload identity is available. Avoid default service accounts and overly broad permissions like Editor role.",
    "tags": [
      "compute-engine",
      "service-accounts",
      "iam",
      "least-privilege",
      "security"
    ],
    "examPatternKeywords": [
      "google-recommended",
      "without keys",
      "security practices"
    ],
    "relatedQuestionIds": ["ace-iam-002", "ace-compute-010"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances"
  },
  {
    "id": "ace-compute-010",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You need to create snapshots of a persistent disk attached to a production VM. You want to minimize the impact on the running application.",
    "question": "What is the recommended approach?",
    "options": [
      {
        "id": "A",
        "text": "Stop the instance, create the snapshot, then restart the instance"
      },
      {
        "id": "B",
        "text": "Create a snapshot while the instance is running"
      },
      {
        "id": "C",
        "text": "Detach the disk, create the snapshot, then reattach"
      },
      {
        "id": "D",
        "text": "Use gcloud to export the disk to Cloud Storage first"
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Persistent disk snapshots can be created while instances are running without stopping them. GCP uses copy-on-write technology to create consistent snapshots with minimal performance impact. This is the recommended approach for production systems.",
      "incorrect": {
        "A": "Stopping the instance causes unnecessary downtime. Snapshots can be created from running instances safely.",
        "C": "Detaching disks requires stopping the instance (for boot disks) or significantly impacts the application. This is unnecessary and causes downtime.",
        "D": "Export is different from snapshot and is used for moving disks between projects/zones. Snapshots are simpler and don't require export to Cloud Storage."
      }
    },
    "keyConceptName": "Persistent Disk Snapshots",
    "keyConcept": "Create snapshots of persistent disks while instances are running. GCP ensures consistency using copy-on-write. Snapshots are incremental, compressed, and stored globally. Use snapshot schedules for automated backups.",
    "tags": ["compute-engine", "snapshots", "backup", "persistent-disk"],
    "examPatternKeywords": [
      "minimize impact",
      "running application",
      "production"
    ],
    "relatedQuestionIds": ["ace-compute-011", "ace-storage-004"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/snapshots"
  },
  {
    "id": "ace-compute-011",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your Managed Instance Group serves web traffic behind a load balancer. Some instances occasionally become unresponsive but don't crash. You want unhealthy instances to be automatically replaced.",
    "question": "What should you configure?",
    "options": [
      {
        "id": "A",
        "text": "Enable automatic restart on the instance template"
      },
      {
        "id": "B",
        "text": "Configure autohealing with an HTTP health check"
      },
      {
        "id": "C",
        "text": "Set up a Cloud Monitoring alert to notify operators"
      },
      {
        "id": "D",
        "text": "Increase the health check interval to detect failures faster"
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Autohealing with health checks monitors application-level health (not just VM-level) and automatically recreates unhealthy instances. HTTP health checks verify the application is responding correctly, catching unresponsive instances that haven't crashed.",
      "incorrect": {
        "A": "Automatic restart only helps when instances crash completely. It doesn't detect or fix unresponsive applications that are still running.",
        "C": "Alerts notify operators but don't automatically resolve the issue. Autohealing provides automatic remediation.",
        "D": "Decreasing (not increasing) the interval detects failures faster, but without autohealing configured, detection alone doesn't trigger replacement."
      }
    },
    "keyConceptName": "Managed Instance Group Autohealing",
    "keyConcept": "Autohealing automatically recreates unhealthy instances based on health check results. Configure application-level health checks (HTTP/HTTPS) to detect unresponsive applications, not just VM failures. Set appropriate initial delay to avoid false positives during startup.",
    "tags": [
      "compute-engine",
      "autohealing",
      "health-checks",
      "managed-instance-group"
    ],
    "examPatternKeywords": [
      "automatically replaced",
      "unresponsive",
      "don't crash"
    ],
    "relatedQuestionIds": ["ace-compute-004", "ace-compute-007"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-groups/autohealing-instances-in-migs"
  },
  {
    "id": "ace-compute-012",
    "domain": "compute-engine",
    "difficulty": "hard",
    "type": "multiple-select",
    "scenario": "You're designing a high-performance computing cluster on Compute Engine that requires low-latency networking between instances and fast local storage for temporary data. What should you configure? (Select 3)",
    "question": "Which features will optimize performance for this HPC workload?",
    "options": [
      {
        "id": "A",
        "text": "Place instances in a single placement group with compact placement policy"
      },
      {
        "id": "B",
        "text": "Attach local SSD disks to each instance"
      },
      {
        "id": "C",
        "text": "Use C2 or C3 machine types optimized for compute-intensive workloads"
      },
      {
        "id": "D",
        "text": "Enable live migration for maintenance"
      },
      {
        "id": "E",
        "text": "Use regional persistent disks for shared storage"
      }
    ],
    "correctAnswer": ["A", "B", "C"],
    "explanation": {
      "correct": "Compact placement groups (A) minimize network latency by placing instances physically close together. Local SSDs (B) provide the highest IOPS and lowest latency for temporary data. C2/C3 machine types (C) are optimized for compute-intensive HPC workloads.",
      "incorrect": {
        "D": "Live migration can temporarily impact network performance. HPC workloads often disable it in favor of termination during maintenance for consistent performance.",
        "E": "Regional persistent disks have higher latency than local SSDs. For temporary HPC data requiring maximum performance, local SSDs are preferred."
      }
    },
    "keyConceptName": "High-Performance Computing on Compute Engine",
    "keyConcept": "Optimize HPC workloads using compact placement groups for low-latency networking, local SSDs for high-IOPS storage, and compute-optimized machine types. Consider disabling live migration for consistent performance.",
    "tags": [
      "compute-engine",
      "hpc",
      "placement-groups",
      "local-ssd",
      "performance"
    ],
    "examPatternKeywords": [
      "low-latency",
      "high-performance",
      "fast local storage"
    ],
    "relatedQuestionIds": ["ace-compute-006", "ace-storage-007"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/use-compact-placement-policies"
  },
  {
    "id": "ace-compute-013",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your VM instance needs additional CPU capacity during business hours (9 AM - 6 PM) but can run with minimal resources during off-hours. You want to optimize costs.",
    "question": "What approach should you take?",
    "options": [
      {
        "id": "A",
        "text": "Use a larger instance type with committed use discounts"
      },
      {
        "id": "B",
        "text": "Create two instance templates and use Cloud Scheduler to swap between them"
      },
      {
        "id": "C",
        "text": "Resize the instance using gcloud compute instances set-machine-type during off-hours"
      },
      {
        "id": "D",
        "text": "Use a Managed Instance Group with scheduled autoscaling"
      }
    ],
    "correctAnswer": ["C"],
    "explanation": {
      "correct": "You can change an instance's machine type by stopping it, changing the type with gcloud or console, and restarting. Combined with Cloud Scheduler, this allows automated daily resizing to match business hour demands while minimizing off-hour costs.",
      "incorrect": {
        "A": "Committed use discounts save money but don't allow for dynamic resizing. You'd pay for the larger capacity 24/7.",
        "B": "Swapping instance templates requires recreating instances, losing local data and state. Direct machine type changes preserve data.",
        "D": "MIGs are for multiple instances. The question implies a single VM. Autoscaling in MIGs also doesn't resize existing instances."
      }
    },
    "keyConceptName": "Instance Resizing and Scheduling",
    "keyConcept": "Change instance machine types by stopping, modifying, and restarting. Automate with Cloud Scheduler for time-based capacity changes. This optimizes costs for workloads with predictable demand patterns while preserving disk data.",
    "tags": ["compute-engine", "resizing", "cost-optimization", "scheduling"],
    "examPatternKeywords": [
      "during business hours",
      "optimize costs",
      "minimal resources"
    ],
    "relatedQuestionIds": ["ace-compute-006", "ace-compute-014"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/changing-machine-type-of-stopped-instance"
  },

  {
    "id": "ace-compute-014",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You are running a non-production batch processing workload on a Compute Engine Instance Group that can tolerate interruptions and needs to be highly cost-effective.",
    "question": "Which type of Compute Engine VM should you use to minimize the cost of the running instances?",
    "options": [
      {
        "id": "A",
        "text": "Standard VMs with Sustained Use Discounts"
      },
      {
        "id": "B",
        "text": "Custom Machine Type VMs"
      },
      {
        "id": "C",
        "text": "Preemptible VMs (Spot VMs)"
      },
      {
        "id": "D",
        "text": "Sole-Tenant Nodes"
      }
    ],
    "correctAnswer": ["C"],
    "explanation": {
      "correct": "Preemptible VMs (now called Spot VMs) are significantly cheaper than standard VMs but can be stopped (preempted) by Google Cloud with a 30-second warning. They are ideal for fault-tolerant, non-critical, or batch processing workloads, offering the lowest cost.",
      "incorrect": {
        "A": "Sustained Use Discounts apply to standard VMs running for a large portion of the month, but they are still more expensive than Spot VMs.",
        "B": "Custom Machine Types help optimize resource fit but do not inherently offer a significant cost reduction like Spot VMs.",
        "D": "Sole-Tenant Nodes are for regulatory or licensing requirements and are much more expensive than standard VMs."
      }
    },
    "keyConceptName": "Compute Engine Cost Optimization",
    "keyConcept": "Preemptible/Spot VMs are the primary mechanism for maximizing cost savings on Compute Engine for non-critical, fault-tolerant workloads by leveraging unused GCP capacity.",
    "tags": [
      "compute-engine",
      "cost-optimization",
      "preemptible-vms",
      "spot-vms"
    ],
    "examPatternKeywords": [
      "minimize the cost",
      "can tolerate interruptions",
      "non-production batch"
    ],
    "relatedQuestionIds": ["ace-compute-009"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/spot"
  },
  {
    "id": "ace-compute-015",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You need to create a group of identical Compute Engine instances that will automatically scale based on CPU utilization and will be managed as a single unit.",
    "question": "Which Compute Engine resource is the correct choice to meet these requirements?",
    "options": [
      {
        "id": "A",
        "text": "Unmanaged Instance Group"
      },
      {
        "id": "B",
        "text": "Instance Template"
      },
      {
        "id": "C",
        "text": "Stateful Managed Instance Group (MIG)"
      },
      {
        "id": "D",
        "text": "Stateless Managed Instance Group (MIG)"
      }
    ],
    "correctAnswer": ["D"],
    "explanation": {
      "correct": "A **Stateless Managed Instance Group (MIG)** (D) is designed to run identical, stateless instances. It provides autoscaling (based on metrics like CPU), autohealing, and automatic updates/rollbacks, managing the instances as a single, scalable unit.",
      "incorrect": {
        "A": "Unmanaged Instance Groups do not support autoscaling or autohealing.",
        "B": "An Instance Template defines the configuration for a VM but is not a group, and it does not provide management features like autoscaling.",
        "C": "Stateful MIGs are used for applications that need to preserve disk, IP, and hostname across restarts/recreations and are generally not used for highly scalable, identical stateless groups."
      }
    },
    "keyConceptName": "Managed Instance Groups (MIGs)",
    "keyConcept": "MIGs are the core resource for building scalable, highly available, and auto-healing services on Compute Engine.",
    "tags": ["compute-engine", "autoscaling", "migs", "high-availability"],
    "examPatternKeywords": [
      "identical Compute Engine instances",
      "automatically scale",
      "managed as a single unit"
    ],
    "relatedQuestionIds": ["ace-compute-007"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-groups"
  },
  {
    "id": "ace-compute-016",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You are creating a new Compute Engine VM and notice that the available predefined machine types do not exactly match your application's CPU and memory needs. You want to avoid overpaying for unused resources.",
    "question": "What is the most cost-effective solution for creating a VM with the precise amount of vCPU and memory required?",
    "options": [
      {
        "id": "A",
        "text": "Use a custom machine type."
      },
      {
        "id": "B",
        "text": "Choose the closest predefined N1 machine type."
      },
      {
        "id": "C",
        "text": "Use a machine type that is eligible for a committed use discount."
      },
      {
        "id": "D",
        "text": "Use a sole-tenant node."
      }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Custom machine types allow you to specify the exact vCPU count and memory size (within certain constraints), ensuring you only pay for the resources your application needs, making it the most cost-effective option when predefined types don't fit.",
      "incorrect": {
        "B": "Choosing the closest predefined type will likely result in paying for more resources than needed (over-provisioning).",
        "C": "Committed Use Discounts (CUDs) reduce the rate, but the most cost-effective VM *configuration* is a custom type if resources are mismatched.",
        "D": "Sole-tenant nodes are expensive and used for specific licensing/security requirements, not for simple resource matching."
      }
    },
    "keyConceptName": "Custom Machine Types",
    "keyConcept": "Custom machine types provide granular control over vCPU and memory allocation, which is a powerful tool for cost optimization on Compute Engine.",
    "tags": ["compute-engine", "cost-optimization", "custom-machine-types"],
    "examPatternKeywords": [
      "precise amount of vCPU and memory",
      "avoid overpaying",
      "most cost-effective solution"
    ],
    "relatedQuestionIds": ["ace-compute-003"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type"
  },
  {
    "id": "ace-compute-017",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-select",
    "scenario": "You are deploying a critical 3-tier application using a Regional Managed Instance Group (MIG). You want to ensure the application is highly available and can automatically recover from common failures.",
    "question": "Which two features should be enabled on the Regional MIG to meet these requirements?",
    "options": [
      {
        "id": "A",
        "text": "Instance Template"
      },
      {
        "id": "B",
        "text": "Autoscaling"
      },
      {
        "id": "C",
        "text": "Autohealing"
      },
      {
        "id": "D",
        "text": "Regional Persistent Disk"
      },
      {
        "id": "E",
        "text": "Cross-region Load Balancing"
      }
    ],
    "correctAnswer": ["B", "C"],
    "explanation": {
      "correct": "A Regional MIG automatically distributes instances across multiple zones for high availability. To handle scaling and failures, you must enable **Autoscaling** (B) to ensure enough capacity under load, and **Autohealing** (C) (using a health check) to automatically recreate instances that fail to respond, thus ensuring application availability.",
      "incorrect": {
        "A": "An Instance Template is required to create a MIG, but it is not a feature you 'enable' to achieve HA/recovery.",
        "D": "Regional Persistent Disk is for stateful workloads; this is a stateless 3-tier application (implied by MIG usage).",
        "E": "Cross-region Load Balancing handles DR between regions, not HA within a region (which the Regional MIG already provides at the infrastructure level)."
      }
    },
    "keyConceptName": "MIG High Availability and Autohealing",
    "keyConcept": "Regional MIGs provide zonal HA. Autoscaling provides scaling HA (under load). Autohealing provides application HA (recovering from software failures).",
    "tags": [
      "compute-engine",
      "migs",
      "high-availability",
      "autohealing",
      "autoscaling"
    ],
    "examPatternKeywords": [
      "critical 3-tier application",
      "highly available",
      "automatically recover from common failures"
    ],
    "relatedQuestionIds": ["ace-compute-004"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-groups/creating-mig-with-autoscaling"
  },
  {
    "id": "ace-compute-018",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You have a high-performance database running on a Compute Engine VM. The VM uses an attached Persistent Disk for its data. To protect against accidental deletion or corruption, you need to create a reliable, point-in-time backup of the disk.",
    "question": "What is the recommended, most common method for creating a point-in-time backup of a Persistent Disk?",
    "options": [
      {
        "id": "A",
        "text": "Creating a machine image of the running VM."
      },
      {
        "id": "B",
        "text": "Creating a disk snapshot."
      },
      {
        "id": "C",
        "text": "Detaching the disk and copying the raw data to Cloud Storage."
      },
      {
        "id": "D",
        "text": "Using the `gcloud compute disks resize` command."
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Disk snapshots (B) are the native GCP feature for creating point-in-time, incremental backups of Persistent Disks. They are highly durable, global, and the most common method for backup and disaster recovery.",
      "incorrect": {
        "A": "A machine image captures the entire VM, including boot disk and configuration, which is overkill for just backing up the data disk.",
        "C": "Copying raw data to Cloud Storage is a manual and error-prone process that is not incremental or automated like snapshots.",
        "D": "Disk resize is for changing the size of the disk, not for backup."
      }
    },
    "keyConceptName": "Persistent Disk Snapshots",
    "keyConcept": "Snapshots provide a cost-effective, durable, and highly available mechanism for backing up and replicating Persistent Disk data across regions.",
    "tags": [
      "compute-engine",
      "persistent-disk",
      "backup",
      "snapshot",
      "disaster-recovery"
    ],
    "examPatternKeywords": [
      "reliable, point-in-time backup",
      "recommended, most common method"
    ],
    "relatedQuestionIds": ["ace-storage-003"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/create-snapshots"
  },
  {
    "id": "ace-compute-019",
    "domain": "compute-engine",
    "difficulty": "hard",
    "type": "multiple-select",
    "scenario": "A financial services application needs to run on Compute Engine. Due to compliance and licensing requirements, the VMs must be physically isolated from other customers, and you need to maximize the cost savings for the committed, fixed resource requirement.",
    "question": "Which two Compute Engine features should you utilize?",
    "options": [
      {
        "id": "A",
        "text": "Sole-Tenant Nodes"
      },
      {
        "id": "B",
        "text": "Committed Use Discounts (CUDs)"
      },
      {
        "id": "C",
        "text": "Preemptible VMs (Spot VMs)"
      },
      {
        "id": "D",
        "text": "Custom Machine Types"
      },
      {
        "id": "E",
        "text": "Managed Instance Groups (MIGs)"
      }
    ],
    "correctAnswer": ["A", "B"],
    "explanation": {
      "correct": "Compliance requiring physical isolation is met by **Sole-Tenant Nodes** (A). These nodes are dedicated physical servers. To maximize cost savings for a **committed, fixed resource requirement**, **Committed Use Discounts (CUDs)** (B) are the most effective mechanism, as they provide a significant discount in exchange for a time commitment.",
      "incorrect": {
        "C": "Preemptible VMs/Spot VMs are for interruptible workloads and are not suitable for a 'fixed' requirement, nor do they guarantee physical isolation.",
        "D": "Custom Machine Types optimize resource fit, but CUDs offer a greater financial incentive for a long-term commitment.",
        "E": "MIGs are for scaling and availability, not licensing/isolation/committed costs."
      }
    },
    "keyConceptName": "Compute Engine Isolation and Commitment",
    "keyConcept": "Sole-Tenant Nodes are for physical isolation and dedicated hardware. CUDs are for maximizing savings on long-term, stable resource usage.",
    "tags": [
      "compute-engine",
      "cost-optimization",
      "security",
      "licensing",
      "sole-tenant-nodes",
      "cuds"
    ],
    "examPatternKeywords": [
      "physically isolated",
      "compliance",
      "maximize the cost savings",
      "committed, fixed resource"
    ],
    "relatedQuestionIds": ["ace-compute-003"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/sole-tenant-nodes"
  },
  {
    "id": "ace-compute-020",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A development team is using a standard Compute Engine VM for continuous integration/continuous deployment (CI/CD) builds. They need to ensure that the VM has the correct IAM permissions to push images to a private Artifact Registry (formerly Container Registry) without managing any API keys or credentials.",
    "question": "What is the correct and most secure approach to grant the VM permission to push images?",
    "options": [
      {
        "id": "A",
        "text": "Generate a Service Account key and securely store it on the VM."
      },
      {
        "id": "B",
        "text": "Assign a custom Service Account to the VM and grant it the 'Artifact Registry Writer' role."
      },
      {
        "id": "C",
        "text": "Use the project's Default Compute Engine Service Account and grant it the 'Editor' role."
      },
      {
        "id": "D",
        "text": "Assign the 'Artifact Registry Writer' role to the user who created the VM."
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "The most secure and recommended approach is to assign a custom Service Account (following the principle of least privilege) to the VM instance (workload identity) and grant it the minimal required role, which is 'Artifact Registry Writer' (B). This avoids key management and utilizes instance-level credentials.",
      "incorrect": {
        "A": "Generating and storing keys (A) is a security risk and is not the recommended GCP practice.",
        "C": "Using the Default Compute Engine Service Account with the 'Editor' role (C) violates the principle of least privilege.",
        "D": "Granting the role to a user (D) will not grant the VM/CI process the permission it needs to authenticate as a machine."
      }
    },
    "keyConceptName": "Compute Engine Workload Identity",
    "keyConcept": "VMs should use an attached custom Service Account with the minimum required IAM permissions (least privilege) to interact with other GCP services.",
    "tags": [
      "compute-engine",
      "iam",
      "security",
      "service-accounts",
      "least-privilege"
    ],
    "examPatternKeywords": [
      "correct and most secure approach",
      "without managing any API keys"
    ],
    "relatedQuestionIds": ["ace-iam-003"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances"
  },
  {
    "id": "ace-compute-021",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You have a single-instance database running on Compute Engine that is stateful and cannot be easily recreated. You need to protect the instance and its data disk against accidental termination.",
    "question": "Which VM configuration option is the most effective way to prevent the instance from being accidentally stopped or deleted?",
    "options": [
      {
        "id": "A",
        "text": "Configure the VM to be a Regional Managed Instance Group (MIG) with a size of 1."
      },
      {
        "id": "B",
        "text": "Enable 'Deletion Protection' for the Compute Engine instance."
      },
      {
        "id": "C",
        "text": "Set the disk's auto-delete option to 'No'."
      },
      {
        "id": "D",
        "text": "Use a Cloud Monitoring alert to notify administrators of a pending deletion."
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "**Deletion Protection** (B) is a specific flag for Compute Engine VMs that prevents users from accidentally deleting the instance (and its associated boot disk) via the console or gcloud command, making it the most direct and effective measure.",
      "incorrect": {
        "A": "MIGs are designed for auto-healing and scaling stateless workloads, and a single instance MIG is not the primary way to prevent accidental deletion.",
        "C": "Setting the disk's auto-delete option (C) only prevents the disk from being deleted *if the instance is deleted*, but it does not prevent the instance deletion itself.",
        "D": "A monitoring alert (D) only notifies after the action is initiated, but it does not prevent the deletion."
      }
    },
    "keyConceptName": "Compute Engine Deletion Protection",
    "keyConcept": "Deletion Protection is a safeguard against accidental resource removal, a best practice for critical, stateful, or long-lived Compute Engine instances.",
    "tags": ["compute-engine", "security", "stateful", "best-practices"],
    "examPatternKeywords": [
      "stateful",
      "accidental termination",
      "most effective way to prevent"
    ],
    "relatedQuestionIds": ["ace-compute-007"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/prevent-deleting-instance"
  },
  {
    "id": "ace-compute-022",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your application runs on a Managed Instance Group (MIG) behind a Global HTTP(S) Load Balancer. You need to deploy a software update with zero downtime. The deployment must only proceed to the next instance once the health check passes on the newly updated instance.",
    "question": "Which MIG feature is specifically designed to handle this type of controlled, zero-downtime deployment?",
    "options": [
      {
        "id": "A",
        "text": "Autoscaling policies"
      },
      {
        "id": "B",
        "text": "Instance Template replacement"
      },
      {
        "id": "C",
        "text": "Proactive Instance Updater"
      },
      {
        "id": "D",
        "text": "Initial rollout of a new MIG"
      }
    ],
    "correctAnswer": ["C"],
    "explanation": {
      "correct": "The **Proactive Instance Updater** (C) is the key feature of a MIG that manages the rollout of new Instance Templates. It allows you to configure rolling updates (zero downtime) based on a configured health check, ensuring that traffic is only shifted to a new instance after the health check is successful.",
      "incorrect": {
        "A": "Autoscaling policies (A) deal with scaling up/down under load, not software updates.",
        "B": "Instance Template replacement (B) is the *action* of changing the template, but the Updater is the *process* that governs the rollout method (e.g., rolling update, canary).",
        "D": "Initial rollout (D) is not the correct term; it's the Updater that manages the change in a controlled way."
      }
    },
    "keyConceptName": "MIG Rolling Updates",
    "keyConcept": "MIGs support automated rolling updates, providing controlled, zero-downtime deployment for stateless applications.",
    "tags": [
      "compute-engine",
      "migs",
      "deployment",
      "zero-downtime",
      "rolling-update"
    ],
    "examPatternKeywords": [
      "zero downtime",
      "deploy a software update",
      "health check passes on the newly updated instance"
    ],
    "relatedQuestionIds": ["ace-app-008"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-groups/rolling-out-updates-to-managed-instance-groups"
  },
  {
    "id": "ace-compute-023",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-select",
    "scenario": "You are migrating a critical, high-IOPS database from on-premises to a Compute Engine VM. The database requires a fast, low-latency disk that can withstand a zonal failure.",
    "question": "Which two Persistent Disk configurations meet these requirements?",
    "options": [
      {
        "id": "A",
        "text": "Zonal Balanced Persistent Disk"
      },
      {
        "id": "B",
        "text": "Zonal Standard Persistent Disk"
      },
      {
        "id": "C",
        "text": "Regional Standard Persistent Disk"
      },
      {
        "id": "D",
        "text": "Regional SSD Persistent Disk"
      },
      {
        "id": "E",
        "text": "Zonal SSD Persistent Disk"
      }
    ],
    "correctAnswer": ["D", "E"],
    "explanation": {
      "correct": "High-IOPS and fast disk means you need a Solid State Drive (SSD) based option: **Zonal SSD Persistent Disk** (E) or **Regional SSD Persistent Disk** (D). Zonal SSD is fast and low-latency, while Regional SSD offers zonal resilience (can withstand a zonal failure by replicating data to a secondary zone). Both are SSD-based.",
      "incorrect": {
        "A": "Balanced PDs offer a good balance but are not as fast as SSD PDs, especially for high-IOPS requirements.",
        "B": "Standard PDs (HDDs) are optimized for throughput, not IOPS, and are too slow.",
        "C": "Regional Standard PDs are too slow (HDD)."
      }
    },
    "keyConceptName": "Persistent Disk Types",
    "keyConcept": "For high-performance (IOPS), use SSD-based disks. For zonal resilience, use the Regional disk option.",
    "tags": [
      "compute-engine",
      "persistent-disk",
      "storage",
      "high-availability",
      "performance"
    ],
    "examPatternKeywords": [
      "critical, high-IOPS database",
      "fast, low-latency disk",
      "withstand a zonal failure"
    ],
    "relatedQuestionIds": ["ace-storage-003"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/types"
  },
  {
    "id": "ace-compute-024",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You need to quickly deploy a simple web server on a Compute Engine VM. You want to use a startup script to install the necessary software packages (Apache, PHP) immediately after the VM is created.",
    "question": "Where should you specify the location of the startup script for the Compute Engine VM?",
    "options": [
      {
        "id": "A",
        "text": "In the `gcloud compute firewall-rules create` command."
      },
      {
        "id": "B",
        "text": "In the `Metadata` section of the VM instance settings."
      },
      {
        "id": "C",
        "text": "In the `IAM & Admin` policy bindings."
      },
      {
        "id": "D",
        "text": "In a separate `startup.yaml` file uploaded to the project."
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Startup scripts (and shutdown scripts) are specified within the **Metadata** section of the Compute Engine VM configuration, typically using the `startup-script` key.",
      "incorrect": {
        "A": "Firewall rules (A) are for network access, not instance configuration.",
        "C": "IAM policy bindings (C) are for access control.",
        "D": "While you can reference a script from Cloud Storage, the actual configuration that tells the VM *where* to find and *run* the script is set in the Metadata."
      }
    },
    "keyConceptName": "Compute Engine Metadata",
    "keyConcept": "Metadata is a key-value store used to pass configuration to a VM instance during creation, including startup scripts, SSH keys, and custom application data.",
    "tags": [
      "compute-engine",
      "configuration",
      "deployment",
      "metadata",
      "startup-script"
    ],
    "examPatternKeywords": [
      "quickly deploy",
      "startup script",
      "where should you specify"
    ],
    "relatedQuestionIds": ["ace-compute-004"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/startupscript"
  },
  {
    "id": "ace-compute-025",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You have a high-traffic web application running on a Regional Managed Instance Group (MIG). You need to ensure the application remains highly responsive during traffic spikes.",
    "question": "What is the recommended scaling policy target for the MIG to ensure rapid horizontal scaling to maintain low latency?",
    "options": [
      {
        "id": "A",
        "text": "CPU utilization at 80%"
      },
      {
        "id": "B",
        "text": "HTTP Load Balancing serving capacity (target utilization)"
      },
      {
        "id": "C",
        "text": "Monitoring metric (e.g., custom latency metric)"
      },
      {
        "id": "D",
        "text": "Maximum connection count"
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "When a MIG is behind an HTTP(S) Load Balancer, the most responsive and efficient scaling signal is the **HTTP Load Balancing serving capacity** (Target Utilization or Requests per second/Utilization). This allows the load balancer itself to signal when more capacity is needed, ensuring minimal request queueing and the lowest latency.",
      "incorrect": {
        "A": "CPU utilization is a common but slower indicator; it only scales after the instance is already burdened.",
        "C": "Custom metrics can be used, but the native Load Balancing signal (B) is the most integrated and recommended for web services behind an HTTP(S) LB.",
        "D": "Maximum connection count is a less precise measure for overall responsiveness compared to load balancer utilization."
      }
    },
    "keyConceptName": "MIG Autoscaling Policies",
    "keyConcept": "Autoscaling should use the most relevant metric for the workload. For web applications behind an HTTP(S) load balancer, the load balancer's capacity metric is usually superior to CPU.",
    "tags": ["compute-engine", "autoscaling", "load-balancing", "performance"],
    "examPatternKeywords": [
      "high-traffic web application",
      "highly responsive",
      "rapid horizontal scaling"
    ],
    "relatedQuestionIds": ["ace-compute-004"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/autoscaler/scaling-mode-load-balancing"
  },
  {
    "id": "ace-compute-026",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-select",
    "scenario": "A compliance requirement states that all newly created Compute Engine VMs in a project must have a specific set of security tags and must utilize a specific, restricted custom machine type.",
    "question": "Which two methods should a Cloud Engineer use to enforce these policies across the entire project?",
    "options": [
      {
        "id": "A",
        "text": "Create an Instance Template and instruct developers to always use it."
      },
      {
        "id": "B",
        "text": "Implement an Organization Policy Constraint to restrict allowed machine types."
      },
      {
        "id": "C",
        "text": "Apply the desired tags to the Default Network Firewall Rules."
      },
      {
        "id": "D",
        "text": "Use Cloud Asset Inventory to audit non-compliant resources monthly."
      },
      {
        "id": "E",
        "text": "Implement an Organization Policy Constraint to enforce required network tags."
      }
    ],
    "correctAnswer": ["B", "E"],
    "explanation": {
      "correct": "To **enforce policies across the entire project** and prevent non-compliant resource creation, you must use **Organization Policy Constraints**. This includes constraints to **restrict allowed machine types** (B) and to **enforce required network tags** (E).",
      "incorrect": {
        "A": "Instructing developers is a procedural control, not an automated enforcement mechanism.",
        "C": "Applying tags to firewall rules (C) only makes the tags available for use; it doesn't enforce their presence on VMs.",
        "D": "Cloud Asset Inventory (D) is an audit tool that detects violations after they occur, not a proactive enforcement mechanism."
      }
    },
    "keyConceptName": "Organization Policy Service",
    "keyConcept": "Organization Policies are used to centrally control the configuration of cloud resources across the entire organization, folders, or projects, acting as a preventative guardrail.",
    "tags": [
      "iam",
      "security",
      "compliance",
      "organization-policy",
      "compute-engine"
    ],
    "examPatternKeywords": [
      "enforce these policies",
      "across the entire project",
      "restricted custom machine type"
    ],
    "relatedQuestionIds": ["ace-iam-008"],
    "officialDocsUrl": "https://cloud.google.com/resource-manager/docs/organization-policy/overview"
  },
  {
    "id": "ace-compute-027",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your Compute Engine VM runs a web service on port 8080. By default, no external traffic is allowed to reach the VM. You need to enable access to port 8080 from the public internet for all instances with the network tag 'web-frontend'.",
    "question": "How should you configure the networking for this access?",
    "options": [
      {
        "id": "A",
        "text": "Create an Egress Firewall rule with a target tag 'web-frontend' and destination port 8080."
      },
      {
        "id": "B",
        "text": "Create an Ingress Firewall rule with a target tag 'web-frontend', source IP range 0.0.0.0/0, and allow TCP port 8080."
      },
      {
        "id": "C",
        "text": "Configure a VPC Peering connection with a firewall rule to open port 8080."
      },
      {
        "id": "D",
        "text": "Modify the instance's network interface to allow all traffic on port 8080."
      }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Traffic *coming into* the VM requires an **Ingress Firewall rule** (B). To allow access from the public internet, the **source IP range** must be **0.0.0.0/0**. The rule must target the VMs using the **target tag 'web-frontend'** and allow **TCP port 8080**.",
      "incorrect": {
        "A": "Egress (A) is for outgoing traffic, not incoming. Ingress is required.",
        "C": "VPC Peering (C) connects two internal networks, it does not open access to the public internet.",
        "D": "Network interface settings (D) do not override the default VPC firewall, which is the mechanism that blocks external traffic."
      }
    },
    "keyConceptName": "VPC Firewall Rules",
    "keyConcept": "VPC firewall rules control all network traffic to and from Compute Engine VMs and can be applied selectively using network tags.",
    "tags": ["compute-engine", "networking", "firewall-rules", "security"],
    "examPatternKeywords": [
      "enable access... from the public internet",
      "for all instances with the network tag"
    ],
    "relatedQuestionIds": ["ace-networking-002"],
    "officialDocsUrl": "https://cloud.google.com/vpc/docs/firewalls"
  },
  {
    "id": "ace-compute-028",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A data processing job runs on a Compute Engine VM and saves results to a separate Persistent Disk. You want to detach the data disk from the running VM and attach it to a new VM in a different zone within the same region for a subsequent processing step.",
    "question": "What must you do to successfully move the disk between the two VMs?",
    "options": [
      {
        "id": "A",
        "text": "Create a disk image of the data disk and provision a new disk from the image in the new zone."
      },
      {
        "id": "B",
        "text": "Ensure the original VM is stopped, detach the zonal Persistent Disk, and then attach it to the new VM in the new zone."
      },
      {
        "id": "C",
        "text": "Create a disk snapshot, create a new disk from the snapshot in the new zone, and then attach it to the new VM."
      },
      {
        "id": "D",
        "text": "Detach the disk from the running VM, create a Regional Persistent Disk from it, and attach it to the new VM."
      }
    ],
    "correctAnswer": ["C"],
    "explanation": {
      "correct": "Zonal Persistent Disks are tied to their zone and cannot be moved directly to a new zone. To move data between zones, you must create a **disk snapshot** (which is a global resource) and then **create a new disk from the snapshot** (C) in the destination zone, then attach it to the new VM.",
      "incorrect": {
        "A": "Disk images are typically for boot disks; snapshots are better suited for point-in-time data disk movement.",
        "B": "This is impossible; you cannot attach a Zonal Persistent Disk to a VM in a different zone.",
        "D": "You cannot simply convert a Zonal PD to a Regional PD and change zones simultaneously; the snapshot/create-new-disk workflow is the correct way."
      }
    },
    "keyConceptName": "Persistent Disk Migration",
    "keyConcept": "Zonal resources (like Zonal PDs) must be replicated (via snapshots) to move their data to another zone or region.",
    "tags": ["compute-engine", "persistent-disk", "migration", "snapshot"],
    "examPatternKeywords": [
      "detach the data disk",
      "attach it to a new VM in a different zone",
      "must you do"
    ],
    "relatedQuestionIds": ["ace-compute-007"],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/create-snapshots"
  },

  {
    "id": "ace-compute-029",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You are preparing to deploy a new web application and want to use a managed virtual machine service in Google Cloud.",
    "question": "Which Google Cloud service should you use to launch virtual machines easily?",
    "options": [
      { "id": "A", "text": "Compute Engine" },
      { "id": "B", "text": "Cloud Functions" },
      { "id": "C", "text": "App Engine" },
      { "id": "D", "text": "Cloud Bigtable" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Compute Engine provides enterprise-grade virtual machines with flexible configuration.",
      "incorrect": {
        "B": "Cloud Functions is for event-driven serverless code, not VMs.",
        "C": "App Engine abstracts server management, but isn't a VM solution.",
        "D": "Cloud Bigtable is a NoSQL database, not compute."
      }
    },
    "keyConceptName": "Compute Engine Basics",
    "keyConcept": "Use Compute Engine for VM deployment and management.",
    "tags": ["compute", "virtual machines", "managed service"],
    "examPatternKeywords": ["vm", "compute engine", "deployment"]
  },
  {
    "id": "ace-compute-030",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your application needs to handle sudden spikes in web traffic. You want to add or remove VM instances automatically.",
    "question": "What feature will help you maintain performance and optimize cost?",
    "options": [
      { "id": "A", "text": "Managed Instance Groups with Autoscaling" },
      { "id": "B", "text": "Manual VM creation and deletion" },
      { "id": "C", "text": "App Engine Standard Environment" },
      { "id": "D", "text": "Persistent Disk Snapshots" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Managed instance groups support autoscaling, automatically adding/removing VMs based on demand.",
      "incorrect": {
        "B": "Manual scaling is not scalable for sudden spikes.",
        "C": "App Engine is not focused on VMs.",
        "D": "Snapshots back up storage, not scale compute."
      }
    },
    "keyConceptName": "Autoscaling",
    "keyConcept": "Use managed instance groups for scalable, high-availability compute.",
    "tags": ["instance group", "autoscaling", "traffic"],
    "examPatternKeywords": ["autoscale", "scaled vm", "managed group"]
  },
  {
    "id": "ace-compute-031",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A machine learning workload requires high-throughput disk access and custom CPU/memory configuration.",
    "question": "Which Compute Engine feature is designed for this type of workload?",
    "options": [
      { "id": "A", "text": "Custom machine types" },
      { "id": "B", "text": "F1-micro predefined machine type" },
      { "id": "C", "text": "Cloud SQL instance" },
      { "id": "D", "text": "Preemptible VM" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Custom machine types allow you to specify the exact CPU and memory for VMs, ideal for specialized needs.",
      "incorrect": {
        "B": "F1-micro is not intended for high-performance workloads.",
        "C": "Cloud SQL is a managed database, not compute.",
        "D": "Preemptible VMs are low cost but may be interrupted at any time."
      }
    },
    "keyConceptName": "Custom Machine Types",
    "keyConcept": "Optimize VM resources for workload with custom machine configurations.",
    "tags": ["custom machines", "performance", "machine learning"],
    "examPatternKeywords": ["custom machine", "vm config", "high throughput"]
  },
  {
    "id": "ace-compute-032",
    "domain": "compute-engine",
    "difficulty": "hard",
    "type": "multiple-select",
    "scenario": "A solution architect must design a resilient infrastructure for an application that cannot tolerate downtime.",
    "question": "Which practices increase VM application availability on Google Cloud? (Select 2)",
    "options": [
      { "id": "A", "text": "Distribute VMs across multiple zones" },
      { "id": "B", "text": "Use managed instance groups" },
      { "id": "C", "text": "Schedule VMs to start only during business hours" },
      { "id": "D", "text": "Place all VMs in the same zone" }
    ],
    "correctAnswer": ["A", "B"],
    "explanation": {
      "correct": "Using multiple zones and managed instance groups increases fault tolerance and ensures VMs are restarted as needed.",
      "incorrect": {
        "C": "Scheduling VMs for business hours only is not HA.",
        "D": "Single zone deployments are less resilient."
      }
    },
    "keyConceptName": "Availability Best Practices",
    "keyConcept": "Distribute resources and automate management for application resilience.",
    "tags": ["availability", "managed instance group", "zones"],
    "examPatternKeywords": ["zone", "availability", "fault tolerance"]
  },
  {
    "id": "ace-compute-033",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You must minimize compute spend for short-lived, batch processing jobs while ensuring scalability.",
    "question": "Which Compute Engine feature is best suited for this need?",
    "options": [
      { "id": "A", "text": "Preemptible or Spot VMs" },
      { "id": "B", "text": "Custom images" },
      { "id": "C", "text": "Persistent disk" },
      { "id": "D", "text": "Cloud Monitoring" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Preemptible and Spot VMs provide scalable compute at a lower price, suitable for jobs that can be interrupted.",
      "incorrect": {
        "B": "Custom images affect VM setup, not cost.",
        "C": "Persistent disk is for storage.",
        "D": "Cloud Monitoring provides observability, not low-cost compute."
      }
    },
    "keyConceptName": "Cost Optimization with Preemptible/Spot VMs",
    "keyConcept": "Use preemptible/spot VMs for short, cost-sensitive workloads that tolerate interruptions.",
    "tags": ["preemptible vm", "spot vm", "cost"],
    "examPatternKeywords": ["preemptible", "spot", "batch job"]
  },

  {
    "id": "ace-compute-035",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A developer wants to automate the creation and deployment of multiple VMs with identical settings across regions.",
    "question": "Which Compute Engine feature most efficiently supports this requirement?",
    "options": [
      { "id": "A", "text": "Instance templates" },
      { "id": "B", "text": "Manual configuration" },
      { "id": "C", "text": "Cloud Functions" },
      { "id": "D", "text": "Persistent Disk Snapshots" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Instance templates allow developers to predefine VM configurations and launch consistent instances across zones and regions.",
      "incorrect": {
        "B": "Manual setup is error-prone and inefficient.",
        "C": "Cloud Functions are for event-driven code, not VM deployment.",
        "D": "Snapshots copy disk state, not VM settings."
      }
    },
    "keyConceptName": "Instance Templates",
    "keyConcept": "Templates enforce configuration consistency and support automation at scale.",
    "tags": ["instance templates", "automation", "deployment"],
    "examPatternKeywords": ["instance template", "consistent vm"]
  },
  {
    "id": "ace-compute-036",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your team needs to quickly recover from zonal outages while minimizing manual intervention. How should you structure your VM deployments?",
    "question": "Which deployment strategy is best?",
    "options": [
      {
        "id": "A",
        "text": "Deploy VMs in managed instance groups across multiple zones"
      },
      { "id": "B", "text": "Deploy all VMs in a single zone" },
      { "id": "C", "text": "Rely solely on preemptible VMs" },
      { "id": "D", "text": "Manually create failover scripts" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Managed instance groups automatically balance instances and recover VMs across zones, providing resilience without manual actions.",
      "incorrect": {
        "B": "Single-zone deployments are prone to outages.",
        "C": "Preemptible VMs can be terminated at any time.",
        "D": "Manual scripts are less reliable than managed solutions."
      }
    },
    "keyConceptName": "Managed Instance Groups",
    "keyConcept": "Cross-zone managed instance groups improve resilience.",
    "tags": ["resilience", "instance group", "zone"],
    "examPatternKeywords": ["multi-zone", "mig", "ha"]
  },
  {
    "id": "ace-compute-037",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-select",
    "scenario": "A solution architect wants to reduce VM cost for non-critical batch jobs while allowing the job to be restarted if interrupted.",
    "question": "Which Compute Engine features should be used? (Select 2)",
    "options": [
      { "id": "A", "text": "Preemptible VMs" },
      { "id": "B", "text": "Spot VMs" },
      { "id": "C", "text": "Sustained-use discounts" },
      { "id": "D", "text": "Dedicated Interconnect" }
    ],
    "correctAnswer": ["A", "B"],
    "explanation": {
      "correct": "Preemptible and Spot VMs are low-cost compute options intended for short-lived, fault-tolerant, or batch workloads.",
      "incorrect": {
        "C": "Sustained-use discounts assist with cost, but don’t involve interruption.",
        "D": "Dedicated Interconnect is for hybrid network, not VM cost."
      }
    },
    "keyConceptName": "Preemptible/Spot VMs for Batch Jobs",
    "keyConcept": "Temporary VMs offer dramatic compute cost reduction for restartable work.",
    "tags": ["preemptible vm", "spot vm", "batch"],
    "examPatternKeywords": ["preemptible", "spot", "batch job", "cost"]
  },
  {
    "id": "ace-compute-038",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You need to ensure persistent data availability for your Compute Engine application after VM restarts or replacement.",
    "question": "What should you use to guarantee data persists beyond a VM's lifecycle?",
    "options": [
      { "id": "A", "text": "Attach and use a Persistent Disk" },
      { "id": "B", "text": "Use local SSD only" },
      { "id": "C", "text": "Store data on the VM's boot disk" },
      { "id": "D", "text": "Deploy VMs in a managed instance group" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Persistent Disks retain data independently of VM lifecycles and are the recommended solution for durable storage.",
      "incorrect": {
        "B": "Local SSDs do not persist beyond the VM lifecycle.",
        "C": "Boot disk is deleted if the VM is deleted, unless specifically retained.",
        "D": "Instance groups manage VMs, not storage."
      }
    },
    "keyConceptName": "Persistent Disk",
    "keyConcept": "Persistent Disks deliver durable, flexible storage for VMs.",
    "tags": ["persistent disk", "data availability", "storage"],
    "examPatternKeywords": ["persistent disk", "disk storage", "vm restart"]
  },
  {
    "id": "ace-compute-039",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A team plans to use custom VM images to quickly launch new Compute Engine instances with pre-installed software.",
    "question": "Which benefit does using custom images provide?",
    "options": [
      { "id": "A", "text": "Reduces setup and configuration time for each VM" },
      {
        "id": "B",
        "text": "Assigns static external IP addresses automatically"
      },
      { "id": "C", "text": "Eliminates the need for firewall rules" },
      { "id": "D", "text": "Guarantees inclusion in autoscaling" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Custom images pre-package required software, streamlining new VM creation.",
      "incorrect": {
        "B": "IP assignment is unrelated to custom images.",
        "C": "Firewall rules are independent of images.",
        "D": "Autoscaling depends on instance template and groups, not custom image alone."
      }
    },
    "keyConceptName": "Custom Images",
    "keyConcept": "Accelerate VM setup and ensure consistency with custom images.",
    "tags": ["custom image", "vm start", "preinstalled software"],
    "examPatternKeywords": ["custom image", "setup", "vm template"]
  },

  {
    "id": "ace-compute-040",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You are creating your first VM in Google Cloud for administrative tasks. Security and cost are main concerns.",
    "question": "Which machine type should you select for a lightweight utility VM to optimize cost?",
    "options": [
      { "id": "A", "text": "E2-medium (shared-core)" },
      { "id": "B", "text": "E2-standard-4 (standard)" },
      { "id": "C", "text": "N2-highmem-16 (memory-optimized)" },
      { "id": "D", "text": "C2-standard-8 (compute-optimized)" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Shared-core machine types like E2-medium are ideal for simple utility workloads, minimizing cost and resource usage.",
      "incorrect": {
        "B": "Standard machine types are unnecessarily powerful and more expensive for admin tasks.",
        "C": "High-memory configurations waste resources and budget for light workloads.",
        "D": "Compute-optimized types are intended for heavy compute tasks, not basics."
      }
    },
    "keyConceptName": "Machine Type Selection",
    "keyConcept": "Always match the lowest sufficient resource type to workload needs for cost efficiency.",
    "tags": ["compute-engine", "vm", "cost-optimization", "machine-type"],
    "examPatternKeywords": ["shared-core", "utility VM", "cost"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/machine-types"
  },
  {
    "id": "ace-compute-041",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You are setting up a VM for an internal admin script and no internet access is required.",
    "question": "Which network configuration option supports best security practice for this VM?",
    "options": [
      { "id": "A", "text": "Assign an external IP and open all ports" },
      { "id": "B", "text": "Disable external IP and use default network" },
      { "id": "C", "text": "Assign a static external IP for remote access" },
      { "id": "D", "text": "Use VPC Peering for external connectivity" }
    ],
    "correctAnswer": ["B"],
    "explanation": {
      "correct": "Disabling the external IP minimizes attack surface for internal-only VMs and is recommended for non-public workloads.",
      "incorrect": {
        "A": "Assigning an external IP and opening all ports is insecure.",
        "C": "Static external IP is only needed if remote public access is required.",
        "D": "VPC Peering connects VPCs but is unnecessary for single, internal admin VMs."
      }
    },
    "keyConceptName": "Network Security",
    "keyConcept": "Use internal IP-only VMs for workloads that don’t need public access.",
    "tags": ["compute-engine", "security", "network", "ip"],
    "examPatternKeywords": ["external IP", "internal VM", "security"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address"
  },
  {
    "id": "ace-compute-042",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "After deploying a VM, you want to automate configuration and startup tasks.",
    "question": "Which Compute Engine feature should you use to execute scripts when the VM starts?",
    "options": [
      { "id": "A", "text": "Attach a startup-script in VM metadata" },
      { "id": "B", "text": "Create a firewall rule" },
      { "id": "C", "text": "Reserve a static IP" },
      { "id": "D", "text": "Set auto-deletion for the boot disk" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Startup scripts in VM metadata allow automated setup when the VM launches, improving reliability.",
      "incorrect": {
        "B": "Firewall rules manage network access, not VM configuration tasks.",
        "C": "Static IP ensures public address persistence but doesn’t affect automation.",
        "D": "Auto-deletion only affects disk lifecycle, not VM configuration."
      }
    },
    "keyConceptName": "Startup Script Automation",
    "keyConcept": "Startup scripts automate and standardize environment setup for VMs.",
    "tags": ["compute-engine", "automation", "startup-script", "metadata"],
    "examPatternKeywords": ["startup tasks", "script", "metadata"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/startup-scripts"
  },
  {
    "id": "ace-compute-043",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You need to attach a new SSD persistent disk to your running VM for additional storage.",
    "question": "Which sequence of steps correctly prepares the disk for use in Linux?",
    "options": [
      {
        "id": "A",
        "text": "Create disk > Format (mkfs.ext4) > Mount to directory"
      },
      { "id": "B", "text": "Create disk > Attach to VM > Enable HTTP traffic" },
      { "id": "C", "text": "Create disk > Assign network tag > Run update" },
      { "id": "D", "text": "Create disk > Reserve external IP > Restart VM" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "For storage disks, you must create, format, and then mount to make the disk usable by the OS.",
      "incorrect": {
        "B": "Enabling HTTP traffic applies to network configuration, not disk setup.",
        "C": "Network tags are unrelated to storage provisioning.",
        "D": "Restarting VM doesn’t configure disk usage."
      }
    },
    "keyConceptName": "Disk Setup",
    "keyConcept": "Disks must be formatted and mounted before data can be written or read.",
    "tags": ["compute-engine", "disk", "mount", "linux"],
    "examPatternKeywords": ["attach disk", "storage", "mount"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/add-persistent-disk"
  },
  {
    "id": "ace-compute-044",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You want to periodically back up VM data stored in /home/minecraft to a Cloud Storage bucket automatically.",
    "question": "Which approach ensures reliable, scheduled backups without manual intervention?",
    "options": [
      {
        "id": "A",
        "text": "Create a cron job that runs a script to copy the data to Cloud Storage"
      },
      { "id": "B", "text": "Manually copy data after each change" },
      { "id": "C", "text": "Enable HTTP traffic to the VM" },
      { "id": "D", "text": "Assign the default network tag to the VM" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Cron jobs automate scheduled tasks, and a backup script is standard practice for reliable cloud data protection.",
      "incorrect": {
        "B": "Manual backups are unreliable and error-prone.",
        "C": "HTTP traffic is not related to scheduled backups.",
        "D": "Network tags do not automate or schedule backups."
      }
    },
    "keyConceptName": "Automated Backups",
    "keyConcept": "Use cron jobs and scripts for scheduled, automatic backup to cloud storage.",
    "tags": ["compute-engine", "backup", "automation", "cloud-storage"],
    "examPatternKeywords": ["backup", "cron job", "script"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/automate-backups"
  },

  {
    "id": "ace-compute-046",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You need to let teammates SSH into a new VM using their Google accounts, following cloud best practices.",
    "question": "How should you allow secure SSH access for team members on Compute Engine VMs?",
    "options": [
      {
        "id": "A",
        "text": "Add each user’s public SSH key via VM metadata or OS Login."
      },
      {
        "id": "B",
        "text": "Share the default user’s private key with everyone."
      },
      { "id": "C", "text": "Open all firewall ports for public IP access." },
      { "id": "D", "text": "Disable SSH to prevent unauthorized access." }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "The most secure and scalable method is to use OS Login or user-specific SSH keys allowing IAM-based or individual access.",
      "incorrect": {
        "B": "Sharing private keys is insecure and dangerous.",
        "C": "Opening all ports increases risk and is unnecessary.",
        "D": "Disabling SSH blocks all remote access, not practical for teams."
      }
    },
    "keyConceptName": "Secure SSH Access",
    "keyConcept": "Use OS Login or individual keys for identity-based access.",
    "tags": ["compute-engine", "ssh", "os-login", "security"],
    "examPatternKeywords": ["ssh", "access", "team"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/oslogin"
  },
  {
    "id": "ace-compute-047",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You must change the machine type of a running VM instance to provide more CPU.",
    "question": "What must you do before you can change a VM’s machine type in Compute Engine?",
    "options": [
      { "id": "A", "text": "Stop the VM before changing the machine type." },
      { "id": "B", "text": "Change the machine type directly while running." },
      { "id": "C", "text": "Change the image before the machine type." },
      { "id": "D", "text": "Attach a new persistent disk first." }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Stopping the VM is a required step before changing the machine type so GCP can reallocate resources.",
      "incorrect": {
        "B": "Machine type can’t be changed while the VM is running.",
        "C": "Image and machine type are independent settings.",
        "D": "Adding disks is unrelated to changing CPU/mem resources."
      }
    },
    "keyConceptName": "Changing Machine Type",
    "keyConcept": "VMs must be stopped before resizing CPU or memory.",
    "tags": ["compute-engine", "resize", "machine-type", "cpu"],
    "examPatternKeywords": ["machine type", "change", "stop VM"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/changing-machine-type"
  },
  {
    "id": "ace-compute-048",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "Daily, you need to schedule automatic shutdowns of certain VMs every night for cost savings.",
    "question": "Which Compute Engine feature allows automatically running shutdown tasks on VM instances?",
    "options": [
      { "id": "A", "text": "Set a shutdown-script in VM metadata." },
      { "id": "B", "text": "Disable the default service account." },
      { "id": "C", "text": "Reserve a static external IP." },
      { "id": "D", "text": "Revoke all instance IAM roles." }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Shutdown scripts let you automate actions (like app shutdown or backup) just before the VM stops.",
      "incorrect": {
        "B": "Disabling the service account restricts API calls, not scheduling.",
        "C": "IP reservation is unrelated to task automation.",
        "D": "IAM roles control permissions but not VM schedules."
      }
    },
    "keyConceptName": "Automating VM Shutdown",
    "keyConcept": "Shutdown scripts are used for automated maintenance operations.",
    "tags": ["compute-engine", "shutdown-script", "automation", "cost"],
    "examPatternKeywords": ["shutdown", "automation", "script"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/shutdownscript"
  },
  {
    "id": "ace-compute-049",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A running VM instance needs additional space for fast-growing application data.",
    "question": "Which disk type should you choose to expand storage with high performance and durability?",
    "options": [
      { "id": "A", "text": "SSD persistent disk" },
      { "id": "B", "text": "Local SSD only" },
      { "id": "C", "text": "RAM disk" },
      { "id": "D", "text": "Standard persistent disk" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "SSD persistent disks are network-attached, durable, and suitable for high-performance application storage.",
      "incorrect": {
        "B": "Local SSDs offer speed but lack data durability after VM stops.",
        "C": "RAM disks are volatile and cleared on reboot.",
        "D": "Standard persistent disks are durable but offer less performance than SSD."
      }
    },
    "keyConceptName": "Disk Selection for Performance",
    "keyConcept": "SSD persistent disks balance speed and durability for demanding workloads.",
    "tags": ["compute-engine", "disk", "storage", "ssd"],
    "examPatternKeywords": ["persistent disk", "performance", "durability"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks"
  },
  {
    "id": "ace-compute-050",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You need to move your VM to a new zone due to planned GCP maintenance.",
    "question": "Which process allows seamless migration of your VM and configuration to another zone?",
    "options": [
      {
        "id": "A",
        "text": "Create a machine image and restore it in the target zone."
      },
      { "id": "B", "text": "Change the VM zone while running." },
      {
        "id": "C",
        "text": "Attach both SSD and Standard disks before moving."
      },
      { "id": "D", "text": "Backup using cron job then stop the VM." }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "A machine image captures boot disk, attached data disks, and VM config, enabling recreation in any zone.",
      "incorrect": {
        "B": "Zones can’t be changed directly; migration requires a new instance.",
        "C": "Attaching disks does not move the VM.",
        "D": "Backups preserve data, but don’t move VM configuration or setup."
      }
    },
    "keyConceptName": "VM Migration",
    "keyConcept": "Machine images simplify restoring VMs in new zones for availability and maintenance.",
    "tags": ["compute-engine", "migration", "machine image", "zone"],
    "examPatternKeywords": ["zone migration", "machine image"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/machine-images"
  },

  {
    "id": "ace-compute-051",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You want to ensure data on your Compute Engine VM is protected from unauthorized access even if a disk is stolen.",
    "question": "What security feature does Google Cloud use by default for persistent disks?",
    "options": [
      { "id": "A", "text": "Automatic disk encryption at rest" },
      { "id": "B", "text": "Manual password protection" },
      { "id": "C", "text": "No protection" },
      { "id": "D", "text": "Public disk sharing" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Google Cloud automatically encrypts all persistent disks at rest for security, without user intervention.",
      "incorrect": {
        "B": "Password protection must be set up manually and isn't default.",
        "C": "Google Cloud never leaves disks unprotected.",
        "D": "Persistent disks are private to your project unless shared explicitly."
      }
    },
    "keyConceptName": "Security & Encryption",
    "keyConcept": "Disk encryption is always enabled for data protection.",
    "tags": ["compute-engine", "disk", "encryption", "security"],
    "examPatternKeywords": ["persistent disk", "encryption"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks#encryption"
  },
  {
    "id": "ace-compute-052",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You plan to deploy a batch process requiring many VMs. Cost reduction is a priority, and interruptions are acceptable.",
    "question": "Which VM type offers significant cost savings for batch workloads in Compute Engine?",
    "options": [
      { "id": "A", "text": "Preemptible (Spot) VM" },
      { "id": "B", "text": "N2-highmem VM" },
      { "id": "C", "text": "Memory-optimized VM" },
      { "id": "D", "text": "Standard persistent VM" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Preemptible (Spot) VMs are much cheaper but can be stopped at any time, suitable for fault-tolerant or batch jobs.",
      "incorrect": {
        "B": "High-memory instances are expensive and not needed for all batch jobs.",
        "C": "Memory-optimized VMs maximize RAM, with higher cost.",
        "D": "Standard VMs cost more for large fleets than preemptible options."
      }
    },
    "keyConceptName": "Cost Optimization",
    "keyConcept": "Use Spot VMs for large, interruptible workloads to save costs.",
    "tags": ["compute-engine", "cost", "preemptible", "spot-vm"],
    "examPatternKeywords": ["batch workload", "cost", "spot"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/spot"
  },
  {
    "id": "ace-compute-053",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your Linux VM’s persistent disk is almost full. You need more storage without downtime.",
    "question": "How can you increase the storage of a running VM with minimal disruption?",
    "options": [
      {
        "id": "A",
        "text": "Resize the persistent disk and extend the filesystem from within the VM"
      },
      { "id": "B", "text": "Detach the disk and replace it with a larger one" },
      { "id": "C", "text": "Create a new VM and migrate data" },
      { "id": "D", "text": "Increase VM memory instead of disk size" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Persistent disks can be resized live, and the filesystem can be extended to use new space without downtime.",
      "incorrect": {
        "B": "Detaching disks will disrupt the VM and its workloads.",
        "C": "Creating new VMs increases complexity and downtime.",
        "D": "Memory upgrade does not solve disk space problems."
      }
    },
    "keyConceptName": "Storage Management",
    "keyConcept": "Live disk resize keeps applications running while expanding storage.",
    "tags": ["compute-engine", "disk", "resize", "linux"],
    "examPatternKeywords": ["persistent disk", "resize"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/resize-disks"
  },
  {
    "id": "ace-compute-054",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You must back up critical data from your Compute Engine VM for disaster recovery.",
    "question": "Which method provides an efficient, cloud-native backup solution for VM disk data?",
    "options": [
      { "id": "A", "text": "Create persistent disk snapshots" },
      { "id": "B", "text": "Use USB drives for manual backup" },
      { "id": "C", "text": "Copy files to a local physical server" },
      { "id": "D", "text": "Clone the VM multiple times" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Snapshots allow quick, incremental, cloud-native backups and can be restored anywhere in GCP.",
      "incorrect": {
        "B": "USB backups are not scalable or reliable in cloud workflows.",
        "C": "Physical server backups are slow and do not leverage cloud infrastructure.",
        "D": "Cloning VMs is inefficient; it does not backup data separately."
      }
    },
    "keyConceptName": "Disaster Recovery",
    "keyConcept": "Disk snapshots are best practice for cloud backup and recovery.",
    "tags": ["compute-engine", "snapshot", "backup", "disaster-recovery"],
    "examPatternKeywords": ["backup", "snapshot"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/create-snapshots"
  },
  {
    "id": "ace-compute-055",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You want all your VMs to be configured identically at creation, for faster onboarding of new team environments.",
    "question": "What feature allows you to deploy multiple, consistent VMs rapidly in Compute Engine?",
    "options": [
      { "id": "A", "text": "Instance templates" },
      { "id": "B", "text": "Manual individual configuration for each VM" },
      { "id": "C", "text": "Custom machine types for each VM" },
      { "id": "D", "text": "Running startup scripts after creation" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Instance templates define VM configuration and speeds deployment of consistent environments.",
      "incorrect": {
        "B": "Manual setup is slow, error-prone, and inconsistent.",
        "C": "Custom machine types only set CPU/memory, not full config.",
        "D": "Startup scripts can automate post-creation setup, but templates guarantee full spec at deployment."
      }
    },
    "keyConceptName": "VM Deployment Consistency",
    "keyConcept": "Instance templates ensure fast, consistent VM creation for teams.",
    "tags": ["compute-engine", "instance-template", "automation", "onboarding"],
    "examPatternKeywords": ["instance template", "consistent deployment"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-templates"
  },

  {
    "id": "ace-compute-056",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You need a VM that temporarily boosts performance for short projects.",
    "question": "What option does Compute Engine offer to support burstable performance for cost savings?",
    "options": [
      { "id": "A", "text": "Shared-core machine types" },
      { "id": "B", "text": "Persistent disk snapshots" },
      { "id": "C", "text": "Custom image deployment" },
      { "id": "D", "text": "Dedicated host reservations" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Shared-core VMs can burst above baseline resource levels temporarily, reducing costs for low-duty-cycle workloads.",
      "incorrect": {
        "B": "Snapshots are for backup, not performance.",
        "C": "Custom images manage OS/software, not CPU behavior.",
        "D": "Dedicated hosts ensure exclusivity, not burst capability."
      }
    },
    "keyConceptName": "VM Burstable Performance",
    "keyConcept": "Use shared-core VMs for workloads needing occasional high performance.",
    "tags": ["compute-engine", "flexibility", "shared-core", "burstable"],
    "examPatternKeywords": ["burstable", "shared-core"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/machine-types"
  },
  {
    "id": "ace-compute-057",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your application workload varies frequently and unpredictably.",
    "question": "How can you ensure your VM always meets changing performance requirements in Compute Engine?",
    "options": [
      { "id": "A", "text": "Resize machine type up/down as needed" },
      { "id": "B", "text": "Set a static machine type at creation" },
      { "id": "C", "text": "Add additional local SSDs only" },
      { "id": "D", "text": "Change zone dynamically" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Compute Engine lets you resize VMs by stopping and changing the machine type, adapting resources to actual demand.",
      "incorrect": {
        "B": "Static sizing can waste resources/cost when demand falls.",
        "C": "Additional local SSDs improve storage, not overall CPU/ram scaling.",
        "D": "Zone changes require migration, not just resizing."
      }
    },
    "keyConceptName": "Flexible Scaling",
    "keyConcept": "VM machine types can be changed as needs evolve.",
    "tags": ["compute-engine", "flexibility", "resize", "scaling"],
    "examPatternKeywords": ["resize", "scaling"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/changing-machine-type"
  },
  {
    "id": "ace-compute-058",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You want to specify the exact number of vCPUs and amount of memory for a unique workload.",
    "question": "Which feature of Compute Engine allows you to custom-tailor resources for your VM?",
    "options": [
      { "id": "A", "text": "Custom machine types" },
      { "id": "B", "text": "Standard machine types" },
      { "id": "C", "text": "Instance group manager" },
      { "id": "D", "text": "Automatic restarts" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Custom machine types empower you to select vCPU and memory values based on exact workloads, optimizing performance and cost.",
      "incorrect": {
        "B": "Standard types only offer predefined sizes.",
        "C": "Instance group manager handles scaling/groups, not single VM config.",
        "D": "Automatic restart is for reliability, not resource allocation."
      }
    },
    "keyConceptName": "Custom Machine Types",
    "keyConcept": "Precisely match CPU/memory to app needs using custom machine types.",
    "tags": ["compute-engine", "custom-type", "flexibility"],
    "examPatternKeywords": ["custom machine type", "flexibility"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/machine-types#custom_machine_types"
  },
  {
    "id": "ace-compute-059",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You want to test different OS images with identical hardware for performance benchmarks.",
    "question": "Which Compute Engine feature lets you reuse VM configurations for multiple deployments?",
    "options": [
      { "id": "A", "text": "Instance templates" },
      { "id": "B", "text": "Instance group autoscales" },
      { "id": "C", "text": "Firewall rules" },
      { "id": "D", "text": "Snapshot restores" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Instance templates store hardware and settings for rapid, repeatable VM creation, ideal for benchmarking scenarios.",
      "incorrect": {
        "B": "Instance groups help with autoscaling, not hardware duplication.",
        "C": "Firewall rules handle network traffic, not VM config.",
        "D": "Snapshots restore disk data, not entire VM specs."
      }
    },
    "keyConceptName": "Repeatable VM Configurations",
    "keyConcept": "Instance templates ensure identical hardware/software setups for testing.",
    "tags": ["compute-engine", "instance-template", "flexibility"],
    "examPatternKeywords": ["instance template", "benchmarking"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-templates"
  },
  {
    "id": "ace-compute-060",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A company needs to isolate sensitive VMs on dedicated hardware for compliance reasons.",
    "question": "Which Compute Engine feature should they use for physical isolation?",
    "options": [
      { "id": "A", "text": "Sole-tenant nodes" },
      { "id": "B", "text": "Shared-core VMs" },
      { "id": "C", "text": "Preemptible VMs" },
      { "id": "D", "text": "Custom images" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Sole-tenant nodes provide dedicated hardware resources for security and regulatory compliance.",
      "incorrect": {
        "B": "Shared-core VMs share physical CPUs, not isolated.",
        "C": "Preemptible VMs optimize cost, not isolation.",
        "D": "Custom images configure OS/software, not hardware allocation."
      }
    },
    "keyConceptName": "Physical Isolation",
    "keyConcept": "Sole-tenant nodes provide compliance-ready physical separation for workloads.",
    "tags": ["compute-engine", "sole-tenant", "isolation", "compliance"],
    "examPatternKeywords": ["dedicated hardware", "compliance"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes"
  },

  {
    "id": "ace-compute-061",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "Your team needs to quickly scale up web server capacity during peak demand using Compute Engine.",
    "question": "Which feature is best for automatically handling spikes in traffic?",
    "options": [
      { "id": "A", "text": "Managed instance groups with autoscaling" },
      { "id": "B", "text": "Manual VM creation" },
      { "id": "C", "text": "Disabling firewall rules" },
      { "id": "D", "text": "Using only virtual machine templates" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Managed instance groups with autoscaling automatically add or remove VM instances in response to demand, providing flexibility and resilience.",
      "incorrect": {
        "B": "Manual creation is slow and labor-intensive for scaling.",
        "C": "Disabling firewall rules does not affect instance creation or traffic handling.",
        "D": "Templates help create VMs but do not manage scaling automatically."
      }
    },
    "keyConceptName": "Autoscaling Flexibility",
    "keyConcept": "Autoscaling in managed groups handles dynamic traffic with Compute Engine.",
    "tags": ["compute-engine", "autoscaling", "instance-group"],
    "examPatternKeywords": ["autoscaling", "Peak demand"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-groups/"
  },
  {
    "id": "ace-compute-062",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You need Compute Engine VMs with GPUs for a machine learning training workload.",
    "question": "How do you add GPUs to a VM in Compute Engine?",
    "options": [
      {
        "id": "A",
        "text": "Select a supported machine type and attach supported GPU type during VM creation"
      },
      { "id": "B", "text": "Enable GPU support in firewall rules" },
      { "id": "C", "text": "Add RAM instead of a GPU" },
      { "id": "D", "text": "Change the operating system to Windows Server" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "GPUs are attached during VM creation by choosing a GPU-enabled machine family and properly configuring the VM.",
      "incorrect": {
        "B": "Firewall rules manage network access, not hardware resources.",
        "C": "RAM is for memory, not acceleration.",
        "D": "Operating system choice doesn't add GPU hardware."
      }
    },
    "keyConceptName": "Accelerator Flexibility",
    "keyConcept": "Compute Engine allows GPU attachment for specialized workloads.",
    "tags": ["compute-engine", "gpu", "accelerator", "machine-learning"],
    "examPatternKeywords": ["gpu", "machine learning"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/gpus/"
  },
  {
    "id": "ace-compute-063",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "After a regional outage, you want your critical VM workloads to remain available.",
    "question": "What design practice with Compute Engine increases availability during outages?",
    "options": [
      {
        "id": "A",
        "text": "Deploy redundant VM instances in multiple regions or zones"
      },
      { "id": "B", "text": "Use only Standard persistent disks" },
      { "id": "C", "text": "Rely on a single zone for all workloads" },
      { "id": "D", "text": "Disable automatic restart and live migration" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Redundancy across regions/zones ensures that if one goes down, others can continue serving workloads.",
      "incorrect": {
        "B": "Standard disks store data, not provide availability.",
        "C": "Single zone design is vulnerable to outages.",
        "D": "Disabling restarts and migration reduces uptime."
      }
    },
    "keyConceptName": "High Availability",
    "keyConcept": "Multi-region/zone deployment increases resiliency for VMs.",
    "tags": ["compute-engine", "availability", "multi-zone", "redundancy"],
    "examPatternKeywords": ["resiliency", "zone outage"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/solutions/designing-multi-zone-applications"
  },
  {
    "id": "ace-compute-064",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You want Compute Engine to restart your VM automatically after an unexpected failure.",
    "question": "What setting enables automatic recovery of VMs?",
    "options": [
      { "id": "A", "text": "Enable automatic restart for the VM" },
      { "id": "B", "text": "Disable the network interface" },
      { "id": "C", "text": "Manually monitor VM status" },
      { "id": "D", "text": "Change disk type to SSD" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Automatic restart ensures VM recovery after failures, maximizing availability.",
      "incorrect": {
        "B": "Disabling network will not restart VMs.",
        "C": "Manual monitoring lacks automation and reliability.",
        "D": "SSD increases performance, not reliability."
      }
    },
    "keyConceptName": "Automatic VM Recovery",
    "keyConcept": "Automatic restart boosts VM resiliency and uptime.",
    "tags": ["compute-engine", "recovery", "restart", "uptime"],
    "examPatternKeywords": ["automatic restart", "recovery"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/availability"
  },
  {
    "id": "ace-compute-065",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A workload requires servers with very high RAM-to-CPU ratios for in-memory databases.",
    "question": "Which Compute Engine machine family is designed for maximum memory per VM?",
    "options": [
      { "id": "A", "text": "Memory-optimized (M1/M2/M3)" },
      { "id": "B", "text": "General-purpose (E2/N2)" },
      { "id": "C", "text": "Compute-optimized (C2/C2D)" },
      { "id": "D", "text": "Accelerator-optimized (A2/G2)" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Memory-optimized families provide the highest RAM allocation per VM, perfect for in-memory/analytical workloads.",
      "incorrect": {
        "B": "General-purpose: balanced, but lower max memory.",
        "C": "Compute-optimized: high frequency CPU but less RAM.",
        "D": "Accelerator-optimized: supports GPUs, not large memory."
      }
    },
    "keyConceptName": "Memory-optimized Machines",
    "keyConcept": "Use Memory-optimized machines for analytically demanding, in-memory DB workloads.",
    "tags": ["compute-engine", "memory-optimized", "high-ram"],
    "examPatternKeywords": ["high memory", "in-memory db"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/machine-types#memory-optimized"
  },

  {
    "id": "ace-compute-066",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You are configuring a VM to act as a public-facing web server.",
    "question": "Which boot disk image should you choose for a standard Linux web server?",
    "options": [
      { "id": "A", "text": "Debian GNU/Linux" },
      { "id": "B", "text": "Windows Server" },
      { "id": "C", "text": "Custom Image with billing software" },
      { "id": "D", "text": "Blank disk with no OS" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Debian is a popular and supported Linux OS image for web servers in Compute Engine.",
      "incorrect": {
        "B": "Windows Server is used for Windows-based apps, not standard Linux web servers.",
        "C": "A custom billing image is unrelated to web hosting.",
        "D": "Blank disks require manual OS installation before use."
      }
    },
    "keyConceptName": "Boot Disk Image Selection",
    "keyConcept": "Choose public OS images for common server roles when possible.",
    "tags": ["compute-engine", "configuration", "boot-disk", "linux"],
    "examPatternKeywords": ["boot image", "web server"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/images"
  },
  {
    "id": "ace-compute-067",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You want to make sure your VM’s network interface connects securely to only a specific subnet.",
    "question": "Which network configuration should you apply?",
    "options": [
      {
        "id": "A",
        "text": "Attach the VM’s network interface to the desired VPC subnet"
      },
      { "id": "B", "text": "Open all inbound firewall ports" },
      { "id": "C", "text": "Reserve a static external IP for the subnet" },
      { "id": "D", "text": "Use multiple network tags" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Directly attaching to a specific subnet restricts the VM’s internal traffic for security and compliance.",
      "incorrect": {
        "B": "Opening all ports is insecure and exposes the VM to risk.",
        "C": "Static IPs can provide reachability but do not control subnet access.",
        "D": "Network tags are used for firewall targeting rather than physical attachment."
      }
    },
    "keyConceptName": "Subnet Security",
    "keyConcept": "Control network access at the subnet level for secure connectivity.",
    "tags": ["compute-engine", "networking", "subnet", "configuration"],
    "examPatternKeywords": ["subnet", "network attachment"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/networks-and-firewalls"
  },
  {
    "id": "ace-compute-068",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You need to optimize disk type for a database VM with high read/write needs.",
    "question": "Which disk type should be chosen for optimal database performance?",
    "options": [
      { "id": "A", "text": "SSD persistent disk" },
      { "id": "B", "text": "Standard persistent disk" },
      { "id": "C", "text": "Local SSD" },
      { "id": "D", "text": "RAM disk" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "SSD persistent disks provide high IOPS and low latency for database workloads.",
      "incorrect": {
        "B": "Standard HDD is slower and suited for archive or low-performance tasks.",
        "C": "Local SSDs are fast but not durable across VM stops.",
        "D": "RAM disks are volatile and not suited for durable storage."
      }
    },
    "keyConceptName": "Disk Configuration for Databases",
    "keyConcept": "SSD persistent disks balance durability with high performance for databases.",
    "tags": ["compute-engine", "disk", "database", "ssd"],
    "examPatternKeywords": ["disk type", "database"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks"
  },
  {
    "id": "ace-compute-069",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "Your VM requires public access for a web app but should restrict incoming traffic for security.",
    "question": "Which network setting provides access while limiting exposure?",
    "options": [
      {
        "id": "A",
        "text": "Create an ingress firewall rule for required ports only"
      },
      { "id": "B", "text": "Disable all firewall rules" },
      { "id": "C", "text": "Open all ports for easier access" },
      { "id": "D", "text": "Assign multiple external IPs" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "An ingress firewall rule targeting only needed ports (e.g., 80/443) allows necessary access but blocks unwanted traffic.",
      "incorrect": {
        "B": "Disabling firewall rules exposes the VM to attacks.",
        "C": "Opening all ports is a major risk.",
        "D": "Multiple external IPs increase exposure, not security."
      }
    },
    "keyConceptName": "Firewall Configuration",
    "keyConcept": "Limit public access to only necessary application ports with firewall rules.",
    "tags": ["compute-engine", "firewall", "network", "security"],
    "examPatternKeywords": ["firewall", "public access"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/vpc/docs/firewalls"
  },
  {
    "id": "ace-compute-070",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "Your app data is stored on attached persistent disks and needs periodic backups.",
    "question": "Which method ensures reliable backups on Compute Engine?",
    "options": [
      { "id": "A", "text": "Create and schedule disk snapshots" },
      { "id": "B", "text": "Copy files to an ephemeral local SSD" },
      { "id": "C", "text": "Write scripts to manually back up data weekly" },
      { "id": "D", "text": "Rely solely on RAID configurations" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Automated disk snapshots offer consistent, incremental backups that can be scheduled for reliability.",
      "incorrect": {
        "B": "Local SSDs lose data when VMs stop/restart.",
        "C": "Manual backups are error-prone and less reliable.",
        "D": "RAID protects against hardware failure but not comprehensive backups."
      }
    },
    "keyConceptName": "Automated Backups",
    "keyConcept": "Use scheduled disk snapshots for reliable, cloud-native backups.",
    "tags": ["compute-engine", "backup", "snapshot", "automation"],
    "examPatternKeywords": ["backup", "snapshot"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/scheduling-snapshots"
  },

  {
    "id": "ace-compute-071",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You are setting up a Compute Engine VM for a test database application.",
    "question": "To optimize performance and minimize costs, what is the best way to provision and attach storage to this VM?",
    "options": [
      {
        "id": "A",
        "text": "Attach a balanced persistent disk sized for actual requirements"
      },
      {
        "id": "B",
        "text": "Provision the largest available SSD persistent disk regardless of needs"
      },
      {
        "id": "C",
        "text": "Attach multiple local SSDs for persistent database storage"
      },
      { "id": "D", "text": "Only use RAM disk for database storage" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Balanced persistent disks provide a cost-effective middle ground for test workloads and can be resized as needs change.",
      "incorrect": {
        "B": "Oversizing SSDs increases spend and is wasteful for small workloads.",
        "C": "Local SSDs are ephemeral and lose data after a stop.",
        "D": "RAM disks do not retain data after a reboot and are volatile."
      }
    },
    "keyConceptName": "Disk Provisioning",
    "keyConcept": "Provision disks for actual workload, not theoretical maximum, to control spend.",
    "tags": ["compute-engine", "disk", "provisioning", "cost"],
    "examPatternKeywords": ["balanced disk", "test workload"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks/"
  },
  {
    "id": "ace-compute-072",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A VM for real-time analytics requires changing CPU and memory allocation after creation.",
    "question": "How can you change a Compute Engine VM’s CPU and RAM allocation?",
    "options": [
      { "id": "A", "text": "Stop the VM and select a different machine type" },
      { "id": "B", "text": "Enable automatic restarts" },
      { "id": "C", "text": "Pause the VM and adjust the resource slider" },
      { "id": "D", "text": "Use a shutdown script to change resources" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "VM machine type can only be changed when stopped, enabling new CPU/RAM sizes.",
      "incorrect": {
        "B": "Automatic restarts recover after crashes, not resize resources.",
        "C": "No slider exists; VM must be stopped.",
        "D": "Shutdown scripts allow for automation, not resource reallocation."
      }
    },
    "keyConceptName": "Flexible Resource Sizing",
    "keyConcept": "Stopping and resizing is required to change machine type.",
    "tags": ["compute-engine", "machine-type", "resize"],
    "examPatternKeywords": ["resize", "stop VM"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/changing-machine-type"
  },
  {
    "id": "ace-compute-073",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You want to limit public access to VM instances while enabling internal communications within the VPC.",
    "question": "Which networking feature supports this configuration?",
    "options": [
      {
        "id": "A",
        "text": "Assign only internal IP addresses and set firewall rules accordingly"
      },
      { "id": "B", "text": "Assign a static external IP to all VMs" },
      { "id": "C", "text": "Open port 22 to the internet for SSH" },
      { "id": "D", "text": "Use Cloud NAT to assign public IPs automatically" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "VPC internal IPs and restrictive firewall rules ensure only internal communication is possible, securing resources.",
      "incorrect": {
        "B": "Giving all VMs external IPs defeats the goal of limiting public access.",
        "C": "Port 22 should be restricted to trusted sources only.",
        "D": "Cloud NAT manages outbound internet, not limiting public inbound access."
      }
    },
    "keyConceptName": "Networking for Security",
    "keyConcept": "Use internal IPs plus firewalls for strong perimeter control.",
    "tags": ["compute-engine", "networking", "internal ip", "firewall"],
    "examPatternKeywords": ["internal ip", "firewall"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/vpc/docs/vpc"
  },
  {
    "id": "ace-compute-074",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You plan to run a mission-critical application requiring zero data loss on disk in case of failure.",
    "question": "Which disk configuration should you choose for the best data durability?",
    "options": [
      { "id": "A", "text": "Regional persistent disk" },
      { "id": "B", "text": "Local SSD" },
      { "id": "C", "text": "Standard persistent disk in a single zone" },
      { "id": "D", "text": "RAM disk" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Regional persistent disks are replicated across two zones, providing high availability and best durability.",
      "incorrect": {
        "B": "Local SSDs are lost after VM stops/fails.",
        "C": "Standard disks in a single zone risk data loss if zone is unavailable.",
        "D": "RAM disks are volatile."
      }
    },
    "keyConceptName": "High Durability Storage",
    "keyConcept": "Regional persistent disks enhance data durability with zone replication.",
    "tags": ["compute-engine", "disk", "regional", "data durability"],
    "examPatternKeywords": ["durability", "regional disk"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/disks"
  },
  {
    "id": "ace-compute-075",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You want all new Compute Engine VMs to use a template for consistent network, disk, and startup settings.",
    "question": "What is the recommended feature for defining standard VM configurations?",
    "options": [
      { "id": "A", "text": "Instance template" },
      { "id": "B", "text": "Startup script only" },
      { "id": "C", "text": "Snapshot" },
      { "id": "D", "text": "Firewall rule group" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Instance templates capture all baseline settings for repeatable VM deployment.",
      "incorrect": {
        "B": "Startup scripts help configure, not standardize full settings.",
        "C": "Snapshots capture disk state, not full config.",
        "D": "Firewall rules only manage networking."
      }
    },
    "keyConceptName": "VM Standardization",
    "keyConcept": "Instance templates ensure consistency and efficiency at scale.",
    "tags": ["compute-engine", "instance template", "standardization"],
    "examPatternKeywords": ["template", "standard configuration"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instance-templates"
  },

  {
    "id": "ace-compute-076",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You are selecting a VM machine type for a small, low-traffic application.",
    "question": "Which Compute Engine machine type helps optimize cost for lightweight workloads?",
    "options": [
      { "id": "A", "text": "Shared-core" },
      { "id": "B", "text": "High-memory" },
      { "id": "C", "text": "Compute-optimized" },
      { "id": "D", "text": "Accelerator-optimized" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Shared-core VMs are the lowest cost option for occasional or light compute needs.",
      "incorrect": {
        "B": "High-memory types are designed for memory-intensive, larger workloads.",
        "C": "Compute-optimized is best for intense computation, not lightweight apps.",
        "D": "Accelerator-optimized is for GPU workloads."
      }
    },
    "keyConceptName": "Cost Optimization for Machine Types",
    "keyConcept": "Choose shared-core VM types for lowest price when resources are minimal.",
    "tags": ["compute-engine", "machine-type", "cost"],
    "examPatternKeywords": ["shared-core", "cost"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/machine-types"
  },
  {
    "id": "ace-compute-077",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You want to restrict VM network access to only specific IP ranges for regulatory compliance.",
    "question": "What should you configure to limit inbound VM traffic?",
    "options": [
      {
        "id": "A",
        "text": "Ingress firewall rules specifying allowed source IP ranges"
      },
      { "id": "B", "text": "Egress rules for outbound internet traffic only" },
      { "id": "C", "text": "Open all network ports in the firewall" },
      { "id": "D", "text": "Assign external IP addresses to all VMs" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Ingress rules with source ranges restrict which IPs can connect, supporting regulatory and security needs.",
      "incorrect": {
        "B": "Egress rules apply to outgoing traffic, not inbound restrictions.",
        "C": "Opening all ports leaves VMs vulnerable.",
        "D": "Assigning external IPs increases exposure."
      }
    },
    "keyConceptName": "Security & Compliance - IP Ranges",
    "keyConcept": "Restrict inbound VM access using precise firewall rules.",
    "tags": ["compute-engine", "networking", "firewall", "compliance"],
    "examPatternKeywords": ["firewall", "compliance"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/vpc/docs/firewalls"
  },
  {
    "id": "ace-compute-078",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "You wish to automate the installation and initial configuration of software when a VM boots up.",
    "question": "Which feature should you use to accomplish this automation?",
    "options": [
      { "id": "A", "text": "Startup scripts in VM metadata" },
      { "id": "B", "text": "Manual SSH logins for every VM" },
      { "id": "C", "text": "Cloud NAT configuration" },
      { "id": "D", "text": "Instance group manager" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Startup scripts ensure every VM launches with the desired configuration and software automatically.",
      "incorrect": {
        "B": "Manual logins are slow, prone to error, and not automated.",
        "C": "Cloud NAT is used for outbound internet, not setup.",
        "D": "Instance group managers focus on scaling, not initial setup."
      }
    },
    "keyConceptName": "Automation with Startup Scripts",
    "keyConcept": "Startup scripts deliver automated setup for every VM boot.",
    "tags": ["compute-engine", "automation", "startup-script"],
    "examPatternKeywords": ["startup-script", "automation"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/startup-scripts"
  },
  {
    "id": "ace-compute-079",
    "domain": "compute-engine",
    "difficulty": "medium",
    "type": "multiple-choice",
    "scenario": "A VM runs a production database. To ensure consistency, maintenance windows are scheduled weekly.",
    "question": "Which VM policy allows the instance to continue running during host maintenance?",
    "options": [
      { "id": "A", "text": "Enable live migration" },
      { "id": "B", "text": "Disable automatic restart" },
      { "id": "C", "text": "Increase the disk size" },
      { "id": "D", "text": "Assign an external IP" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Live migration allows VMs to move to another host without downtime during infrastructure maintenance.",
      "incorrect": {
        "B": "Disabling restart limits VM recovery from failure.",
        "C": "Disk size does not affect VM uptime.",
        "D": "External IPs influence network, not maintenance behavior."
      }
    },
    "keyConceptName": "High Availability - Live Migration",
    "keyConcept": "Live migration maximizes uptime during host node maintenance.",
    "tags": ["compute-engine", "maintenance", "high-availability"],
    "examPatternKeywords": ["live migration", "maintenance"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/live-migration"
  },
  {
    "id": "ace-compute-080",
    "domain": "compute-engine",
    "difficulty": "easy",
    "type": "multiple-choice",
    "scenario": "You want to save on VM costs for a temporary development task that can tolerate interruptions.",
    "question": "Which Compute Engine VM pricing option should you choose?",
    "options": [
      { "id": "A", "text": "Spot VM (preemptible)" },
      { "id": "B", "text": "Standard on-demand VM" },
      { "id": "C", "text": "Sole-tenant node" },
      { "id": "D", "text": "Memory-optimized VM" }
    ],
    "correctAnswer": ["A"],
    "explanation": {
      "correct": "Spot VMs are ideal for temporary, interruptible tasks and come with significant cost reductions.",
      "incorrect": {
        "B": "On-demand VMs have no interruption but cost more.",
        "C": "Sole-tenant nodes are for hardware isolation, not cost savings.",
        "D": "Memory-optimized VMs target high-RAM workloads, costing more."
      }
    },
    "keyConceptName": "Cost Strategy - Spot VMs",
    "keyConcept": "Choose Spot VMs for cost-saving where interruptions are acceptable.",
    "tags": ["compute-engine", "spot-vm", "cost"],
    "examPatternKeywords": ["spot vm", "cost"],
    "relatedQuestionIds": [],
    "officialDocsUrl": "https://cloud.google.com/compute/docs/instances/spot"
  }
]
